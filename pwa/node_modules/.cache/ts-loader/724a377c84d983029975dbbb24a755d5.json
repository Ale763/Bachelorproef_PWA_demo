{"remainingRequest":"/Users/ale/Documents/Bachproef/pwa-3/node_modules/babel-loader/lib/index.js!/Users/ale/Documents/Bachproef/pwa-3/node_modules/ts-loader/index.js??ref--13-2!/Users/ale/Documents/Bachproef/pwa-3/src/main.ts","dependencies":[{"path":"/Users/ale/Documents/Bachproef/pwa-3/src/main.ts","mtime":1556178669303},{"path":"/Users/ale/Documents/Bachproef/pwa-3/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ale/Documents/Bachproef/pwa-3/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/ale/Documents/Bachproef/pwa-3/node_modules/ts-loader/index.js","mtime":1545640398000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es6.object.assign\";\nimport \"core-js/modules/es7.promise.finally\";\nimport Vue from 'vue';\nimport App from './App.vue';\nimport router from './router';\nimport store from './store/index';\nimport Vuetify from 'vuetify';\nimport 'vuetify/dist/vuetify.min.css';\nVue.use(Vuetify);\nVue.config.productionTip = false;\nnew Vue({\n  router: router,\n  store: store,\n  render: function render(h) {\n    return h(App);\n  }\n}).$mount('#app'); // ===================================================\n// Feature detection\n// ===================================================\n\nfunction swIsSupported() {\n  return \"serviceWorker\" in navigator;\n}\n\nif (swIsSupported()) {// let newWorker;\n  // window.addEventListener('load', function ()\n  // {\n  // \tnavigator.serviceWorker.register('/sw.js', {scope: '/'})\n  // \t         .then((registration) =>\n  // \t               {\n  // \t\t               // Registration was successful\n  // \t\t               registration.addEventListener('updatefound', () =>\n  // \t\t               {\n  // \t\t\t               newWorker = registration.installing;\n  //\n  // \t\t\t               newWorker\n  // \t\t\t               .addEventListener(\n  // \t\t\t               'statechange',\n  // \t\t\t               () =>\n  // \t\t\t               {\n  // \t\t\t\t               // Has service worker state changed?\n  // \t\t\t\t               switch (newWorker.state)\n  // \t\t\t\t               {\n  // \t\t\t\t\t               case 'installed':\n  //\n  // \t\t\t\t\t\t               // There is a new service worker available, show the\n  // \t\t\t\t\t\t               // notification\n  // \t\t\t\t\t\t               if (navigator.serviceWorker.controller)\n  // \t\t\t\t\t\t               {\n  // \t\t\t\t\t\t\t               console.log(\"NEW SW AVAILABLE\");\n  // \t\t\t\t\t\t               }\n  //\n  // \t\t\t\t\t\t               break;\n  // \t\t\t\t               }\n  // \t\t\t               });\n  // \t\t               });\n  //\n  // \t\t               console.log('SW GLOBAL OK: ', registration.scope);\n  //\n  // \t               }, (err) =>\n  // \t               {\n  // \t\t               // registration failed :(\n  // \t\t               console.log('SW registration failed: ', err);\n  // \t               })\n  // \t         .then(() =>\n  // \t               {\n  // \t\t               return navigator.serviceWorker.ready;\n  // \t               });\n  // navigator.serviceWorker.register('/sw.js', {scope: '/js'})\n  //          .then(function (registration)\n  //                {\n  // \t               // Registration was successful\n  // \t               console.log('SW PARTIAL OK: ', registration.scope);\n  //\n  //                }, function (err)\n  //                {\n  // \t               // registration failed :(\n  // \t               console.log('SW registration failed: ', err);\n  //                }).then(function() {\n  // \treturn navigator.serviceWorker.ready;\n  // });\n  // });\n}",{"version":3,"sources":["/Users/ale/Documents/Bachproef/pwa-3/src/main.ts"],"names":[],"mappings":";;;;AAAA,OAAO,GAAP,MAAoB,KAApB;AACA,OAAO,GAAP,MAAoB,WAApB;AACA,OAAO,MAAP,MAAoB,UAApB;AACA,OAAO,KAAP,MAAoB,eAApB;AACA,OAAO,OAAP,MAAoB,SAApB;AACA,OAAO,8BAAP;AAEA,GAAG,CAAC,GAAJ,CAAQ,OAAR;AAEA,GAAG,CAAC,MAAJ,CAAW,aAAX,GAA2B,KAA3B;AAEA,IAAI,GAAJ,CAAQ;AACC,EAAA,MAAM,EAAN,MADD;AAEC,EAAA,KAAK,EAAL,KAFD;AAGC,EAAA,MAAM,EAAE,gBAAC,CAAD;AAAA,WAAO,CAAC,CAAC,GAAD,CAAR;AAAA;AAHT,CAAR,EAIW,MAJX,CAIkB,MAJlB,E,CAMA;AACA;AACA;;AACA,SAAS,aAAT,GAAsB;AAAK,SAAO,mBAAmB,SAA1B;AAAsC;;AAEjE,IAAI,aAAa,EAAjB,EACA,CACC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAED;AACA","sourcesContent":["import Vue     from 'vue';\nimport App     from './App.vue';\nimport router  from './router';\nimport store   from './store/index';\nimport Vuetify from 'vuetify';\nimport 'vuetify/dist/vuetify.min.css';\n\nVue.use(Vuetify);\n\nVue.config.productionTip = false;\n\nnew Vue({\n\t        router,\n\t        store,\n\t        render: (h) => h(App),\n        }).$mount('#app');\n\n// ===================================================\n// Feature detection\n// ===================================================\nfunction swIsSupported() { return `serviceWorker` in navigator; }\n\nif (swIsSupported())\n{\n\t// let newWorker;\n\t// window.addEventListener('load', function ()\n\t// {\n\t// \tnavigator.serviceWorker.register('/sw.js', {scope: '/'})\n\t// \t         .then((registration) =>\n\t// \t               {\n\t// \t\t               // Registration was successful\n\t// \t\t               registration.addEventListener('updatefound', () =>\n\t// \t\t               {\n\t// \t\t\t               newWorker = registration.installing;\n\t//\n\t// \t\t\t               newWorker\n\t// \t\t\t               .addEventListener(\n\t// \t\t\t               'statechange',\n\t// \t\t\t               () =>\n\t// \t\t\t               {\n\t// \t\t\t\t               // Has service worker state changed?\n\t// \t\t\t\t               switch (newWorker.state)\n\t// \t\t\t\t               {\n\t// \t\t\t\t\t               case 'installed':\n\t//\n\t// \t\t\t\t\t\t               // There is a new service worker available, show the\n\t// \t\t\t\t\t\t               // notification\n\t// \t\t\t\t\t\t               if (navigator.serviceWorker.controller)\n\t// \t\t\t\t\t\t               {\n\t// \t\t\t\t\t\t\t               console.log(\"NEW SW AVAILABLE\");\n\t// \t\t\t\t\t\t               }\n\t//\n\t// \t\t\t\t\t\t               break;\n\t// \t\t\t\t               }\n\t// \t\t\t               });\n\t// \t\t               });\n\t//\n\t// \t\t               console.log('SW GLOBAL OK: ', registration.scope);\n\t//\n\t// \t               }, (err) =>\n\t// \t               {\n\t// \t\t               // registration failed :(\n\t// \t\t               console.log('SW registration failed: ', err);\n\t// \t               })\n\t// \t         .then(() =>\n\t// \t               {\n\t// \t\t               return navigator.serviceWorker.ready;\n\t// \t               });\n\n\t\t// navigator.serviceWorker.register('/sw.js', {scope: '/js'})\n\t\t//          .then(function (registration)\n\t\t//                {\n\t\t// \t               // Registration was successful\n\t\t// \t               console.log('SW PARTIAL OK: ', registration.scope);\n\t\t//\n\t\t//                }, function (err)\n\t\t//                {\n\t\t// \t               // registration failed :(\n\t\t// \t               console.log('SW registration failed: ', err);\n\t\t//                }).then(function() {\n\t\t// \treturn navigator.serviceWorker.ready;\n\t\t// });\n\n\t// });\n}\n\n\n"],"sourceRoot":""}]}