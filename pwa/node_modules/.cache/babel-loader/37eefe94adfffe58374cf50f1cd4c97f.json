{"remainingRequest":"/Users/ale/Documents/Bachproef/pwa-3/node_modules/babel-loader/lib/index.js!/Users/ale/Documents/Bachproef/pwa-3/node_modules/vuetify-loader/lib/loader.js!/Users/ale/Documents/Bachproef/pwa-3/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/ale/Documents/Bachproef/pwa-3/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ale/Documents/Bachproef/pwa-3/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/ale/Documents/Bachproef/pwa-3/src/App.vue","mtime":1560531419302},{"path":"/Users/ale/Documents/Bachproef/pwa-3/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ale/Documents/Bachproef/pwa-3/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/ale/Documents/Bachproef/pwa-3/node_modules/vuetify-loader/lib/loader.js","mtime":1549812933000},{"path":"/Users/ale/Documents/Bachproef/pwa-3/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ale/Documents/Bachproef/pwa-3/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _getIterator from \"/Users/ale/Documents/Bachproef/pwa-3/node_modules/@babel/runtime-corejs2/core-js/get-iterator\";\nimport _JSON$stringify from \"/Users/ale/Documents/Bachproef/pwa-3/node_modules/@babel/runtime-corejs2/core-js/json/stringify\";\nimport _Promise from \"/Users/ale/Documents/Bachproef/pwa-3/node_modules/@babel/runtime-corejs2/core-js/promise\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.string.starts-with\";\nimport \"core-js/modules/es6.function.name\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/ale/Documents/Bachproef/pwa-3/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Product from \"./components/Product\";\nimport Post from \"./components/Post\";\nimport Navbar from \"./components/Navbar\";\nimport { MagentoAPIService } from \"./services/MagentoAPIService\";\nimport { FirebaseService } from \"./services/FirebaseService\";\nimport * as firebase from \"firebase/app\";\nimport \"firebase/messaging\";\nimport * as localForage from \"localforage\";\nimport axios from \"axios\";\nimport \"./env.js\";\nimport { ServiceWorkerLib } from \"./modules/ServiceWorkerLib.ts\";\nexport default {\n  name: \"App\",\n  components: {\n    Product: Product,\n    Post: Post,\n    Navbar: Navbar\n  },\n  data: function data() {\n    return {\n      pageTitle: \"Home\",\n      firebase: {\n        config: {\n          apiKey: \"AIzaSyAyGInviSJMCyZV_XHLIRa8fKAt-wsaAJA\",\n          authDomain: \"pwademo-763.firebaseapp.com\",\n          databaseURL: \"https://pwademo-763.firebaseio.com\",\n          projectId: \"pwademo-763\",\n          storageBucket: \"pwademo-763.appspot.com\",\n          messagingSenderId: \"857384407396\"\n        },\n        messaging: null,\n        token: null\n      },\n      swLib: null,\n      registration: null,\n      serviceWorker: null,\n      service_worker: {\n        refreshing: false,\n        reloadRequested: false\n      },\n      lf: null,\n      currentWorker: null,\n      newWorker: null,\n      drawer: \"\",\n      offline: !navigator.onLine,\n      pwaPrompt: null,\n      showPWAInstall: false,\n      installed: false,\n      showNotifications: true\n    };\n  },\n  computed: {\n    posts: function posts() {\n      var posts = this.$store.getters[\"posts/allPosts\"]; // console.log(\"All Posts: \", posts);\n\n      return posts;\n    },\n    products: function products() {\n      var products = this.$store.getters[\"products/allProducts\"]; // console.log(\"All Posts: \", posts);\n\n      return products;\n    },\n    firebase_token: function firebase_token() {}\n  },\n  created: function () {\n    var _created = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee() {\n      var _this = this;\n\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              this.pageTitle = this.$route.name;\n              localForage.setDriver([localForage.INDEXEDDB, localForage.WEBSQL, localForage.LOCALSTORAGE]).then(function () {\n                localForage.config({\n                  name: \"Alessio\",\n                  version: 1.0,\n                  size: 4980736,\n                  // Size of database, in bytes. WebSQL-only for now.\n                  storeName: \"lf2\",\n                  // Should be alphanumeric, with underscores.\n                  description: \"some description\"\n                });\n              });\n              this.lf = localForage.createInstance({\n                name: \"lf\"\n              });\n              this.lf.setItem(\"test\", \"kqsdjmqkdfj\");\n              this.sw(); // this.firebaseNotificationsHandler();\n\n              window.addEventListener(\"online\", function () {\n                _this._isOffline(false);\n              });\n              window.addEventListener(\"offline\", function () {\n                _this._isOffline(true);\n              });\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function created() {\n      return _created.apply(this, arguments);\n    }\n\n    return created;\n  }(),\n  watch: {\n    $route: function () {\n      var _$route = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2(to, from) {\n        var THIS, pageURL, pageTitle, title;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                THIS = this;\n                pageURL = this.$route.path;\n                pageTitle = this.$route.name;\n                fetch(pageURL).then(function (resp) {\n                  return console.log(\"Background fetched: \", pageURL);\n                }).catch(function (err) {\n                  return console.error(err);\n                });\n                if (pageTitle) this.pageTitle = pageTitle;else {\n                  pageTitle = window.location.pathname;\n                  if (pageTitle.startsWith(\"/\")) pageTitle = pageTitle.slice(1);\n                  title = pageTitle.split(\"/\");\n                  if (title[0] === \"category\") title[0] = \"Category: \";\n                  this.pageTitle = title[0] + title[1];\n                }\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function $route(_x, _x2) {\n        return _$route.apply(this, arguments);\n      }\n\n      return $route;\n    }()\n  },\n  methods: {\n    _isOffline: function _isOffline(value) {\n      this.offline = value;\n    },\n    _testMethod: function _testMethod() {\n      this.send_msg_to_sw_with_response({\n        action: \"SW\"\n      }).then(function (m) {\n        return console.log(m);\n      });\n    },\n    callChild: function callChild() {\n      // this.bus.$emit('toggleNavbar');\n      this.$refs.Navbar._toggleNavbar();\n    },\n    _firebaseInit: function _firebaseInit() {\n      firebase.initializeApp(this.firebase.config);\n      this.firebase.messaging = firebase.messaging();\n      this.firebase.messaging.usePublicVapidKey(\"BHEX_KV05JO3refzgJbNXaXObnSiCb2kjx1rOsLWhMon4dea2ddfiYD0iLBHm6DsQkVp8sCLr2Ypuuz6haDnOzo\");\n    },\n    _firebaseGetToken: function _firebaseGetToken() {\n      var THIS = this;\n      return THIS.firebase.messaging.getToken().then(function (currentToken) {\n        if (currentToken) {\n          THIS.firebase.token = currentToken;\n          THIS.lf.setItem(\"token\", currentToken).then(function (value) {// console.log(\"LocalForage: \", value)\n          }).catch(function (error) {\n            console.error(\"LocalForage: \", error);\n          }); // console.log(\"TOKEN: \", currentToken);\n\n          currentToken;\n        } else {\n          console.log(\"No Instance ID token available. Request permission to generate one.\");\n        }\n      }).catch(function (err) {\n        console.log(\"An error occurred while retrieving token. \", err); // setTokenSentToServer(false);\n      });\n    },\n    _firebaseRequestPermission: function _firebaseRequestPermission() {\n      var _this2 = this;\n\n      var THIS = this;\n      this.firebase.messaging.requestPermission().then(function () {\n        // console.log('Notification permission granted.');\n        _this2._firebaseGetToken().then(function (response) {// let payload = {\n          //     \t   \"to\": THIS.firebase.token,\n          //         \"collapse_key\": \"type_a\",\n          //         \"notification\":\n          //         {\n          //             \"title\": \"payload.title\",\n          //             \"body\": \"payload.body\",\n          //             \"icon\": \"payload.icon\",\n          //             \"click_action\": \"payload.action\"\n          //         },\n          //         \"data\":\n          //         {\n          //             \"shown\": false\n          //         }\n          // };\n          // FirebaseService.sendNotificationToSelf(payload)\n        });\n      }).catch(function (err) {\n        console.log(\"Unable to get permission to notify.\", err);\n      });\n    },\n    firebaseNotificationsHandler: function firebaseNotificationsHandler() {\n      var _this3 = this;\n\n      var THIS = this;\n\n      this._firebaseInit();\n\n      this._firebaseRequestPermission(); // -----------------------------------------------------------------------------------------------------\n      // Event listeners\n\n\n      THIS.firebase.messaging.onTokenRefresh(function () {\n        _this3._firebaseGetToken();\n\n        console.log(\"TOKEN REFRESHED: \", THIS.firebase.token);\n      });\n      THIS.firebase.messaging.onMessage(function (payload) {\n        console.log(\"Message received. \", payload);\n\n        if (Notification.permission === \"granted\") {\n          var notification = new Notification(payload.notification.title, {\n            icon: payload.notification.icon,\n            body: payload.notification.body\n          });\n\n          notification.onclick = function () {\n            console.log(\"NOTIFCATION CLICK\");\n            window.open(payload.notification.click_action, \"_blank\");\n          };\n\n          return notification;\n        }\n      });\n    },\n    send_msg_to_sw_with_response: function send_msg_to_sw_with_response(msg) {\n      return new _Promise(function (resolve, reject) {\n        var messageChannel = new MessageChannel();\n\n        messageChannel.port1.onmessage = function (event) {\n          if (event.data.error) {\n            reject(event.data.error);\n          } else {\n            resolve(event.data);\n          }\n        };\n\n        navigator.serviceWorker.controller.postMessage(msg, [messageChannel.port2]);\n      });\n    },\n    pp: function pp(sw, msg) {\n      return new _Promise(function (resolve, reject) {\n        var messageChannel = new MessageChannel();\n\n        messageChannel.port1.onmessage = function (event) {\n          if (event.data.error) {\n            reject(event.data.error);\n          } else {\n            resolve(event.data);\n          }\n        };\n\n        sw.postMessage(msg, [messageChannel.port2]);\n      });\n    },\n    send_message_to_sw: function send_message_to_sw(msg) {\n      if (\"serviceWorker\" in navigator) {\n        // const currentWorker = this.swLib.getCurrentWorker();\n        var cookie = \"Type=\".concat(msg);\n\n        this._setCookie(\"Type\", msg);\n\n        this.sw.postMessage({\n          dev_comm: true,\n          cookie: cookie\n        });\n      }\n    },\n    request_from_sw: function request_from_sw() {\n      var request = new Request(\"/update.js\");\n      var requestOptions = {\n        method: \"GET\"\n      };\n      return fetch(request, requestOptions).then(function (response) {\n        return {\n          request: request,\n          response: response\n        };\n      }).catch(function (error) {\n        console.error(error);\n        console.error(_JSON$stringify(error));\n        return {\n          request: request,\n          response: response\n        };\n      });\n    },\n    send_new_sw: function send_new_sw() {\n      if (this.newWorker) this.newWorker.postMessage({\n        action: \"skipWaiting\"\n      });\n    },\n    sw: function sw() {\n      var _this4 = this;\n\n      window.addEventListener(\"load\",\n      /*#__PURE__*/\n      _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3() {\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return navigator.serviceWorker.register(\"/sw.js\").catch(function (error) {\n                  return console.error(\"registration failed: \", error);\n                });\n\n              case 2:\n                _this4.registration = _context3.sent;\n                _this4.serviceWorker = _this4.registration.active; // let reg = await this.swLib.register()\n                // this.sw = await this.swLib.getCurrentWorker();\n                // console.log(\"REGISTRATION: \", this.swLib);\n\n                window.addEventListener(\"newSW\", function () {\n                  console.log(\"newSW arrived\");\n                });\n\n              case 5:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      })));\n      /* navigator.serviceWorker.register(\"/sw.js\").then(registration =>\n                    {\n                        this.serviceWorker = registration.active;\n                    }); */\n    },\n    _navigateTo: function _navigateTo(url, buh) {\n      this.lf.setItem(\"buh\", buh).catch(function (error) {\n        console.error(error);\n      });\n      window.location = url;\n    },\n    _setCookie: function _setCookie(key, value) {\n      var parsedCookies = this._parseDocumentCookies();\n\n      parsedCookies = this._setValueOnParsedCookies(parsedCookies, key, value);\n\n      var stringifiedCookies = this._stringifyParsedCookies(parsedCookies);\n\n      document.cookie = \"\".concat(key, \"=\").concat(value);\n\n      if (this.registration.active) {\n        this.registration.active.postMessage({\n          action: \"setCookies\",\n          cookies: parsedCookies\n        });\n      }\n    },\n    _deteleCookie: function _deteleCookie(key) {\n      document.cookie = \"\".concat(key, \"= ; expires = Thu, 01 Jan 1970 00:00:00 GMT\");\n    },\n    _parseDocumentCookies: function _parseDocumentCookies() {\n      var docCookies = document.cookie;\n      if (docCookies === \"\") return [];\n      docCookies = document.cookie.split(\";\");\n      var parsedCookies = [];\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = _getIterator(docCookies), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var docCookie = _step.value;\n          var parsedCookie = docCookie.split(\"=\");\n          parsedCookies.push(parsedCookie);\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return parsedCookies;\n    },\n    _setValueOnParsedCookies: function _setValueOnParsedCookies(parsedCookies, key, value) {\n      var valueSet = false;\n\n      for (var i = 0; i < parsedCookies.length; ++i) {\n        if (parsedCookies[i][0] === key) {\n          parsedCookies[i][1] = value;\n          valueSet = true;\n        }\n      }\n\n      if (!valueSet) parsedCookies.push([key, value]);\n      return parsedCookies;\n    },\n    _stringifyParsedCookies: function _stringifyParsedCookies(parsedCookies) {\n      var stringifiedCookies = \"\";\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = _getIterator(parsedCookies), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var cookie = _step2.value;\n          stringifiedCookies += \"\".concat(cookie[0], \"=\").concat(cookie[1], \";\");\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      return stringifiedCookies;\n    },\n    myfetch: function myfetch(p) {\n      var request = new Request(\"https://pwa.local:8080/api/products/\"); // request.headers.append(\"X-X\", p);\n\n      fetch(request, {\n        credentials: \"include\"\n      }).catch(function (err) {\n        return console.error(err);\n      }); // fetch(request);\n    }\n  }\n};",{"version":3,"sources":["App.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n<v-app>\n    <v-toolbar app>\n        <v-toolbar-side-icon v-on:click=\"callChild()\"></v-toolbar-side-icon>\n        <v-toolbar-title class=\"black--text\">{{pageTitle}}</v-toolbar-title>\n        <v-spacer></v-spacer>\n        <v-icon v-if=\"offline\">cloud_off</v-icon>\n        <v-btn v-if=\"showPWAInstall\" icon @click=\"_firebaseRequestPermission()\">\n            <v-icon>get_app</v-icon>\n        </v-btn>\n    </v-toolbar>\n    <v-content>\n        <Navbar ref=\"Navbar\" />\n        \n        <v-alert :value=\"true\" type=\"error\" v-if=\"offline\" icon=\"cloud_off\" dismissible>You are offline. Functionality may be limited.</v-alert>\n        <router-view />\n    </v-content>\n</v-app>\n</template>\n\n<script>\nimport Product from \"./components/Product\";\nimport Post from \"./components/Post\";\nimport Navbar from \"./components/Navbar\";\n\nimport\n{\n    MagentoAPIService\n}\nfrom \"./services/MagentoAPIService\";\nimport\n{\n    FirebaseService\n}\nfrom \"./services/FirebaseService\";\nimport * as firebase from \"firebase/app\";\nimport \"firebase/messaging\";\nimport * as localForage from \"localforage\";\nimport axios from \"axios\";\nimport \"./env.js\";\nimport\n{\n    ServiceWorkerLib\n}\nfrom \"./modules/ServiceWorkerLib.ts\";\n\nexport default\n{\n    name: \"App\",\n    components:\n    {\n        Product,\n        Post,\n        Navbar: Navbar\n    },\n    data()\n    {\n        return {\n            pageTitle: \"Home\",\n            firebase:\n            {\n                config:\n                {\n                    apiKey: \"AIzaSyAyGInviSJMCyZV_XHLIRa8fKAt-wsaAJA\",\n                    authDomain: \"pwademo-763.firebaseapp.com\",\n                    databaseURL: \"https://pwademo-763.firebaseio.com\",\n                    projectId: \"pwademo-763\",\n                    storageBucket: \"pwademo-763.appspot.com\",\n                    messagingSenderId: \"857384407396\"\n                },\n                messaging: null,\n                token: null\n            },\n            swLib: null,\n            registration: null,\n            serviceWorker: null,\n            service_worker:\n            {\n                refreshing: false,\n                reloadRequested: false\n            },\n            lf: null,\n            currentWorker: null,\n            newWorker: null,\n            drawer: \"\",\n            offline: !navigator.onLine,\n            pwaPrompt: null,\n            showPWAInstall: false,\n            installed: false,\n            showNotifications: true\n        };\n    },\n    computed:\n    {\n        posts: function ()\n        {\n            let posts = this.$store.getters[\"posts/allPosts\"];\n            // console.log(\"All Posts: \", posts);\n            return posts;\n        },\n        products: function ()\n        {\n            let products = this.$store.getters[\"products/allProducts\"];\n            // console.log(\"All Posts: \", posts);\n            return products;\n        },\n        firebase_token()\n        {}\n    },\n    async created()\n    {\n        this.pageTitle = this.$route.name;\n        localForage\n            .setDriver([\n                localForage.INDEXEDDB,\n                localForage.WEBSQL,\n                localForage.LOCALSTORAGE\n            ])\n            .then(function ()\n            {\n                localForage.config(\n                {\n                    name: \"Alessio\",\n                    version: 1.0,\n                    size: 4980736, // Size of database, in bytes. WebSQL-only for now.\n                    storeName: \"lf2\", // Should be alphanumeric, with underscores.\n                    description: \"some description\"\n                });\n            });\n\n        this.lf = localForage.createInstance(\n        {\n            name: \"lf\"\n        });\n        this.lf.setItem(\"test\", \"kqsdjmqkdfj\");\n\n        this.sw();\n        // this.firebaseNotificationsHandler();\n        window.addEventListener(\"online\", () =>\n        {\n            this._isOffline(false);\n        });\n        window.addEventListener(\"offline\", () =>\n        {\n            this._isOffline(true);\n        });\n    },\n    watch:\n    {\n        async $route(to, from)\n        {\n            const THIS = this;\n            let pageURL = this.$route.path;\n            let pageTitle = this.$route.name;\n            fetch(pageURL)\n                .then(resp => console.log(\"Background fetched: \", pageURL))\n                .catch(err => console.error(err));\n            if (pageTitle) this.pageTitle = pageTitle;\n            else\n            {\n                pageTitle = window.location.pathname;\n                if (pageTitle.startsWith(\"/\")) pageTitle = pageTitle.slice(1);\n                let title = pageTitle.split(\"/\");\n                if (title[0] === \"category\") title[0] = \"Category: \";\n                this.pageTitle = title[0] + title[1];\n            }\n        }\n    },\n    methods:\n    {\n        _isOffline(value)\n        {\n            this.offline = value;\n        },\n        _testMethod()\n        {\n            this.send_msg_to_sw_with_response(\n            {\n                action: \"SW\"\n            }).then(m => console.log(m));\n        },\n        callChild()\n        {\n            // this.bus.$emit('toggleNavbar');\n            this.$refs.Navbar._toggleNavbar();\n        },\n        _firebaseInit()\n        {\n            firebase.initializeApp(this.firebase.config);\n            this.firebase.messaging = firebase.messaging();\n            this.firebase.messaging.usePublicVapidKey(\n                \"BHEX_KV05JO3refzgJbNXaXObnSiCb2kjx1rOsLWhMon4dea2ddfiYD0iLBHm6DsQkVp8sCLr2Ypuuz6haDnOzo\"\n            );\n        },\n        _firebaseGetToken()\n        {\n            const THIS = this;\n            return THIS.firebase.messaging\n                .getToken()\n                .then(function (currentToken)\n                {\n                    if (currentToken)\n                    {\n                        THIS.firebase.token = currentToken;\n                        THIS.lf\n                            .setItem(\"token\", currentToken)\n                            .then(value =>\n                            {\n                                // console.log(\"LocalForage: \", value)\n                            })\n                            .catch(error =>\n                            {\n                                console.error(\"LocalForage: \", error);\n                            });\n                        // console.log(\"TOKEN: \", currentToken);\n                        currentToken;\n                    }\n                    else\n                    {\n                        console.log(\n                            \"No Instance ID token available. Request permission to generate one.\"\n                        );\n                    }\n                })\n                .catch(function (err)\n                {\n                    console.log(\"An error occurred while retrieving token. \", err);\n                    // setTokenSentToServer(false);\n                });\n        },\n        _firebaseRequestPermission()\n        {\n            const THIS = this;\n            this.firebase.messaging\n                .requestPermission()\n                .then(() =>\n                {\n                    // console.log('Notification permission granted.');\n                    this._firebaseGetToken().then(response =>\n                    {\n                        // let payload = {\n                        //     \t   \"to\": THIS.firebase.token,\n                        //         \"collapse_key\": \"type_a\",\n                        //         \"notification\":\n                        //         {\n                        //             \"title\": \"payload.title\",\n                        //             \"body\": \"payload.body\",\n                        //             \"icon\": \"payload.icon\",\n                        //             \"click_action\": \"payload.action\"\n                        //         },\n                        //         \"data\":\n                        //         {\n                        //             \"shown\": false\n                        //         }\n                        // };\n                        // FirebaseService.sendNotificationToSelf(payload)\n                    });\n                })\n                .catch(err =>\n                {\n                    console.log(\"Unable to get permission to notify.\", err);\n                });\n        },\n        firebaseNotificationsHandler()\n        {\n            const THIS = this;\n            this._firebaseInit();\n            this._firebaseRequestPermission();\n\n            // -----------------------------------------------------------------------------------------------------\n            // Event listeners\n\n            THIS.firebase.messaging.onTokenRefresh(() =>\n            {\n                this._firebaseGetToken();\n                console.log(\"TOKEN REFRESHED: \", THIS.firebase.token);\n            });\n\n            THIS.firebase.messaging.onMessage(payload =>\n            {\n                console.log(\"Message received. \", payload);\n                if (Notification.permission === \"granted\")\n                {\n                    const notification = new Notification(payload.notification.title,\n                    {\n                        icon: payload.notification.icon,\n                        body: payload.notification.body\n                    });\n                    notification.onclick = function ()\n                    {\n                        console.log(\"NOTIFCATION CLICK\");\n                        window.open(payload.notification.click_action, \"_blank\");\n                    };\n                    return notification;\n                }\n            });\n        },\n        send_msg_to_sw_with_response(msg)\n        {\n            return new Promise(function (resolve, reject)\n            {\n                var messageChannel = new MessageChannel();\n                messageChannel.port1.onmessage = function (event)\n                {\n                    if (event.data.error)\n                    {\n                        reject(event.data.error);\n                    }\n                    else\n                    {\n                        resolve(event.data);\n                    }\n                };\n\n                navigator.serviceWorker.controller.postMessage(msg, [\n                    messageChannel.port2\n                ]);\n            });\n        },\n        pp(sw, msg)\n        {\n            return new Promise(function (resolve, reject)\n            {\n                var messageChannel = new MessageChannel();\n                messageChannel.port1.onmessage = function (event)\n                {\n                    if (event.data.error)\n                    {\n                        reject(event.data.error);\n                    }\n                    else\n                    {\n                        resolve(event.data);\n                    }\n                };\n\n                sw.postMessage(msg, [messageChannel.port2]);\n            });\n        },\n        send_message_to_sw(msg)\n        {\n            if (\"serviceWorker\" in navigator)\n            {\n                // const currentWorker = this.swLib.getCurrentWorker();\n                let cookie = `Type=${msg}`;\n                this._setCookie(\"Type\", msg);\n                this.sw.postMessage(\n                {\n                    dev_comm: true,\n                    cookie: cookie\n                });\n            }\n        },\n        request_from_sw()\n        {\n            let request = new Request(\"/update.js\");\n            const requestOptions = {\n                method: \"GET\"\n            };\n            return fetch(request, requestOptions)\n                .then(response =>\n                {\n                    return {\n                        request: request,\n                        response: response\n                    };\n                })\n                .catch(error =>\n                {\n                    console.error(error);\n                    console.error(JSON.stringify(error));\n                    return {\n                        request: request,\n                        response: response\n                    };\n                });\n        },\n        send_new_sw()\n        {\n            if (this.newWorker)\n                this.newWorker.postMessage(\n                {\n                    action: \"skipWaiting\"\n                });\n        },\n        sw()\n        {\n            window.addEventListener(\"load\", async () =>\n            {\n                this.registration = await navigator.serviceWorker\n                    .register(\"/sw.js\")\n                    .catch(error => console.error(`registration failed: `, error));\n                this.serviceWorker = this.registration.active;\n                // let reg = await this.swLib.register()\n                // this.sw = await this.swLib.getCurrentWorker();\n                // console.log(\"REGISTRATION: \", this.swLib);\n                window.addEventListener(\"newSW\", () =>\n                {\n                    console.log(\"newSW arrived\");\n                });\n            });\n            /* navigator.serviceWorker.register(\"/sw.js\").then(registration =>\n                          {\n                              this.serviceWorker = registration.active;\n                          }); */\n        },\n        _navigateTo(url, buh)\n        {\n            this.lf.setItem(\"buh\", buh).catch(error =>\n            {\n                console.error(error);\n            });\n            window.location = url;\n        },\n        _setCookie(key, value)\n        {\n            let parsedCookies = this._parseDocumentCookies();\n            parsedCookies = this._setValueOnParsedCookies(parsedCookies, key, value);\n            let stringifiedCookies = this._stringifyParsedCookies(parsedCookies);\n            document.cookie = `${key}=${value}`;\n\n            if (this.registration.active)\n            {\n                this.registration.active.postMessage(\n                {\n                    action: \"setCookies\",\n                    cookies: parsedCookies\n                });\n            }\n        },\n        _deteleCookie(key)\n        {\n            document.cookie = `${key}= ; expires = Thu, 01 Jan 1970 00:00:00 GMT`;\n        },\n        _parseDocumentCookies()\n        {\n            let docCookies = document.cookie;\n            if (docCookies === \"\") return [];\n            docCookies = document.cookie.split(\";\");\n            let parsedCookies = [];\n            for (let docCookie of docCookies)\n            {\n                let parsedCookie = docCookie.split(\"=\");\n                parsedCookies.push(parsedCookie);\n            }\n            return parsedCookies;\n        },\n        _setValueOnParsedCookies(parsedCookies, key, value)\n        {\n            let valueSet = false;\n            for (let i = 0; i < parsedCookies.length; ++i)\n            {\n                if (parsedCookies[i][0] === key)\n                {\n                    parsedCookies[i][1] = value;\n                    valueSet = true;\n                }\n            }\n            if (!valueSet) parsedCookies.push([key, value]);\n            return parsedCookies;\n        },\n        _stringifyParsedCookies(parsedCookies)\n        {\n            let stringifiedCookies = \"\";\n            for (let cookie of parsedCookies)\n            {\n                stringifiedCookies += `${cookie[0]}=${cookie[1]};`;\n            }\n            return stringifiedCookies;\n        },\n        myfetch(p)\n        {\n            let request = new Request(\"https://pwa.local:8080/api/products/\");\n\n            // request.headers.append(\"X-X\", p);\n            fetch(request,\n            {\n                credentials: \"include\"\n            }).catch(err => console.error(err));\n            // fetch(request);\n        }\n    }\n};\n</script>\n\n<style lang=\"scss\">\n// Overwrite v-alert icon color\n.v-alert .v-alert__icon.v-icon,\n.v-alert__dismissible .v-icon {\n    color: white !important;\n}\n</style>\n"],"sourceRoot":"src"}]}