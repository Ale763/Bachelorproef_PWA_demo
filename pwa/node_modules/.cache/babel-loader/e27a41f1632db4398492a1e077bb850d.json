{"remainingRequest":"/Users/ale/Documents/Bachproef/pwa-3/node_modules/thread-loader/dist/cjs.js!/Users/ale/Documents/Bachproef/pwa-3/node_modules/babel-loader/lib/index.js!/Users/ale/Documents/Bachproef/pwa-3/node_modules/vuetify-loader/lib/loader.js!/Users/ale/Documents/Bachproef/pwa-3/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/ale/Documents/Bachproef/pwa-3/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ale/Documents/Bachproef/pwa-3/src/views/Update.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/ale/Documents/Bachproef/pwa-3/src/views/Update.vue","mtime":1556781541389},{"path":"/Users/ale/Documents/Bachproef/pwa-3/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ale/Documents/Bachproef/pwa-3/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ale/Documents/Bachproef/pwa-3/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/ale/Documents/Bachproef/pwa-3/node_modules/vuetify-loader/lib/loader.js","mtime":1549812933000},{"path":"/Users/ale/Documents/Bachproef/pwa-3/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ale/Documents/Bachproef/pwa-3/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _JSON$stringify from \"/Users/ale/Documents/Bachproef/pwa-3/node_modules/@babel/runtime-corejs2/core-js/json/stringify\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/ale/Documents/Bachproef/pwa-3/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { FirebaseService } from \"../services/FirebaseService\";\nimport * as localForage from \"localforage\";\nexport default {\n  name: \"Update\",\n  data: function data() {\n    return {\n      service_worker: null,\n      newWorker: null,\n      pageTitle: \"Update\",\n      swName: \"sw.js\",\n      lf: null,\n      firebaseToken: null,\n      update: false\n    };\n  },\n  computed: {},\n  created: function created() {\n    var _this = this;\n\n    console.log(\"Creating Update, \", window.location.pathname);\n    this.install_sw();\n    this.lf = localForage.createInstance({\n      name: \"lf\"\n    });\n    this.lf.getItem(\"token\").then(function (token) {\n      _this.firebaseToken = token;\n    }).catch(function (error) {\n      return console.error(\"Error retrieving token from localStorage\");\n    });\n    setTimeout(function () {\n      var img = document.createElement(\"img\");\n      img.src = \"/img/horse.jpg\";\n      img.style = \"max-width: 100%; max-height: 500px;\";\n\n      if (document.getElementById('imgElement')) {\n        document.getElementById('imgElement').appendChild(img);\n      }\n    }, 3000);\n  },\n  methods: {\n    install_sw: function install_sw() {\n      var _this2 = this;\n\n      var pathName = window.location.pathname;\n      console.log(pathName);\n      if (pathName === '/') return;\n\n      if (pathName === '/update-without-skip-and-claim') {\n        this.pageTitle = \"Update without skip and claim\";\n        this.swName = '/sw-without-skip-and-claim.js';\n      } else if (pathName === '/update-with-skip-no-claim') {\n        this.pageTitle = \"Update with skip, not claim\";\n        this.swName = '/sw-with-skip-no-claim.js';\n      } else if (pathName === '/update-with-skip-and-claim') {\n        this.pageTitle = \"Update with skip and claim\";\n        this.swName = '/sw-with-skip-and-claim.js';\n      }\n\n      window.addEventListener('load',\n      /*#__PURE__*/\n      _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                navigator.serviceWorker.register(_this2.swName, {\n                  scope: pathName\n                }).then(function (registration) {\n                  _this2.registration = registration;\n\n                  _this2._updateListener();\n\n                  console.log('SW UPDATE_DEMO OK: ', registration.scope);\n                }, function (err) {\n                  console.log('SW UPDATE_DEMO FAILED: ', err);\n                }).then(function () {\n                  console.log('SW READY', pathName);\n                  _this2.service_worker = navigator.serviceWorker;\n                  return navigator.serviceWorker.ready;\n                });\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      })));\n    },\n    _notifyUpdate: function _notifyUpdate() {// let payload = {\n      //     \"to\": this.firebaseToken,\n      //     \"collapse_key\": \"type_a\",\n      //     \"notification\":\n      //     {\n      //         \"title\": \"Update available\",\n      //         \"body\": \"Update available\",\n      //         \"icon\": \"/images/icons/icon-72x72.png\",\n      //         \"click_action\": \"/\"\n      //     },\n      //     \"data\":\n      //     {\n      //         \"shown\": false\n      //     }\n      // };\n      // FirebaseService.sendNotificationToSelf(payload)\n      // this.lf.getItem(\"token\")\n      //     .then((token) =>\n      //           {\n      //\n      //           })\n      //     .catch(error => console.error(\"Error retrieving token from localStorage\"));\n    },\n    _updateListener: function _updateListener() {\n      var _this3 = this;\n\n      if (this.registration.waiting && this.registration.active) {\n        this.newWorker = this.registration.waiting;\n        console.log(\"SW DETECTING UPDATE 1\"); // this._notifyUpdate();\n\n        this.update = true;\n      } else {\n        this.registration.addEventListener('updatefound', function () {\n          _this3.newWorker = _this3.registration.installing;\n\n          _this3.newWorker.addEventListener('statechange', function () {\n            // Has service worker state changed?\n            switch (_this3.newWorker.state) {\n              case 'installed':\n                // There is a new service worker available, show the\n                // notification\n                if (navigator.serviceWorker.controller) {\n                  console.log(\"SW DETECTING UPDATE 2\"); // this._notifyUpdate();\n\n                  _this3.update = true;\n                }\n\n                break;\n            }\n          });\n        });\n      }\n    },\n    unregister_sw: function unregister_sw() {\n      this.registration.unregister().then(function () {\n        console.log(\"Unregister\");\n      });\n    },\n    request_from_sw: function request_from_sw() {\n      var request = new Request(\"/\".concat(this.swName));\n      var requestOptions = {\n        method: 'GET'\n      };\n      return fetch(request, requestOptions).then(function (response) {\n        return {\n          request: request,\n          response: response\n        };\n      }).catch(function (error) {\n        console.error(error);\n        console.error(_JSON$stringify(error));\n        return {\n          request: request,\n          response: response\n        };\n      });\n    },\n    send_new_sw: function send_new_sw() {\n      this.$emit('updateRequest'); // this.newWorker.postMessage({action: 'skipWaiting'});\n    }\n  }\n};",{"version":3,"sources":["Update.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div>\n        <h1>{{ pageTitle }}</h1>\n        <h2>Update available: {{update}}</h2>\n        <a style=\"\"\n           v-on:click=\"request_from_sw()\">REQUEST\n        </a>\n        <br>\n        <a style=\"\"\n           v-on:click=\"unregister_sw()\">UNREGISTER\n        </a>\n        <div style=\"display:block;\">\n\n            <img src=\"/img/horse.jpg\"\n                 style=\"display:inline-block; max-height: 500px; max-width: 50%;\">\n            <div id=\"imgElement\"\n                 style=\"display:inline-block; max-height: 500px; max-width: 50%;\"></div>\n        </div>\n    </div>\n</template>\n\n<script>\n\timport  {FirebaseService} from \"../services/FirebaseService\";\n\timport * as localForage from \"localforage\";\n\texport default {\n\t\tname: \"Update\",\n\t\tdata()\n\t\t{\n\t\t\treturn {\n\t\t\t\tservice_worker: null,\n\t\t\t\tnewWorker: null,\n\t\t\t\tpageTitle: \"Update\",\n\t\t\t\tswName: \"sw.js\",\n\t\t\t\tlf: null,\n\t\t\t\tfirebaseToken: null,\n                update: false,\n\t\t\t}\n\t\t},\n\t\tcomputed: {},\n\t\tcreated()\n\t\t{\n\t\t\tconsole.log(\"Creating Update, \", window.location.pathname);\n\t\t\tthis.install_sw();\n\t\t\tthis.lf = localForage.createInstance({name: \"lf\"});\n\t\t\tthis.lf.getItem(\"token\")\n\t\t\t    .then((token) =>\n\t\t\t          {\n\t\t\t\t          this.firebaseToken = token;\n\t\t\t          })\n\t\t\t    .catch(error => console.error(\"Error retrieving token from localStorage\"));\n\t\t\tsetTimeout(\n\t\t\t() =>\n\t\t\t{\n\t\t\t\tlet img = document.createElement(\"img\");\n\t\t\t\timg.src = \"/img/horse.jpg\";\n\t\t\t\timg.style = \"max-width: 100%; max-height: 500px;\";\n\t\t\t\tif (document.getElementById('imgElement'))\n\t\t\t\t{\n\t\t\t\t\tdocument.getElementById('imgElement')\n\t\t\t\t\t        .appendChild(img);\n\t\t\t\t}\n\t\t\t}, 3000);\n\t\t},\n\t\tmethods:\n\t\t{\n\t\t\tinstall_sw()\n\t\t\t{\n\t\t\t\tconst pathName = window.location.pathname;\n\t\t\t\tconsole.log(pathName);\n\t\t\t\tif (pathName === '/')\n\t\t\t\t\treturn;\n\n\t\t\t\tif (pathName === '/update-without-skip-and-claim')\n\t\t\t\t{\n\t\t\t\t\tthis.pageTitle = \"Update without skip and claim\";\n\t\t\t\t\tthis.swName = '/sw-without-skip-and-claim.js';\n\t\t\t\t} else if (pathName === '/update-with-skip-no-claim')\n\t\t\t\t{\n\t\t\t\t\tthis.pageTitle = \"Update with skip, not claim\";\n\t\t\t\t\tthis.swName = '/sw-with-skip-no-claim.js';\n\t\t\t\t} else if (pathName === '/update-with-skip-and-claim')\n\t\t\t\t{\n\t\t\t\t\tthis.pageTitle = \"Update with skip and claim\";\n\t\t\t\t\tthis.swName = '/sw-with-skip-and-claim.js';\n\t\t\t\t}\n\n\t\t\t\twindow.addEventListener(\n\t\t\t\t'load',\n\t\t\t\tasync () =>\n\t\t\t\t{\n\t\t\t\t\tnavigator\n\t\t\t\t\t.serviceWorker\n\t\t\t\t\t.register(this.swName, {scope: pathName})\n\t\t\t\t\t.then((registration) =>\n\t\t\t\t\t      {\n\t\t\t\t\t\t      this.registration = registration;\n\t\t\t\t\t\t      this._updateListener();\n\t\t\t\t\t\t      console.log('SW UPDATE_DEMO OK: ', registration.scope);\n\t\t\t\t\t      },\n\t\t\t\t\t      (err) => { console.log('SW UPDATE_DEMO FAILED: ', err); })\n\t\t\t\t\t.then(() =>\n\t\t\t\t\t      {\n\t\t\t\t\t\t      console.log('SW READY', pathName);\n\t\t\t\t\t\t      this.service_worker = navigator.serviceWorker;\n\t\t\t\t\t\t      return navigator.serviceWorker.ready;\n\t\t\t\t\t      });\n\n\t\t\t\t});\n\t\t\t},\n            _notifyUpdate()\n            {\n\t            // let payload = {\n\t\t        //     \"to\": this.firebaseToken,\n\t\t        //     \"collapse_key\": \"type_a\",\n\t\t        //     \"notification\":\n\t\t        //     {\n\t\t\t    //         \"title\": \"Update available\",\n\t\t\t    //         \"body\": \"Update available\",\n\t\t\t    //         \"icon\": \"/images/icons/icon-72x72.png\",\n\t\t\t    //         \"click_action\": \"/\"\n\t\t        //     },\n\t\t        //     \"data\":\n\t\t        //     {\n\t\t\t    //         \"shown\": false\n\t\t        //     }\n\t            // };\n\t            // FirebaseService.sendNotificationToSelf(payload)\n\t            // this.lf.getItem(\"token\")\n\t            //     .then((token) =>\n\t            //           {\n\t\t        //\n\t            //           })\n\t            //     .catch(error => console.error(\"Error retrieving token from localStorage\"));\n            }\n            ,\n\t\t\t_updateListener()\n\t\t\t{\n\t\t\t\tif (this.registration.waiting && this.registration.active)\n\t\t\t\t{\n\t\t\t\t\tthis.newWorker = this.registration.waiting;\n\t\t\t\t\tconsole.log(\"SW DETECTING UPDATE 1\");\n                    // this._notifyUpdate();\n                    this.update = true;\n\t\t\t\t} else\n\t\t\t\t{\n\t\t\t\t\tthis.registration.addEventListener(\n\t\t\t\t\t'updatefound',\n\t\t\t\t\t() =>\n\t\t\t\t\t{\n\n\t\t\t\t\t\tthis.newWorker = this.registration.installing;\n\n\t\t\t\t\t\tthis.newWorker\n\t\t\t\t\t\t    .addEventListener(\n\t\t\t\t\t\t    'statechange',\n\t\t\t\t\t\t    () =>\n\t\t\t\t\t\t    {\n\t\t\t\t\t\t\t    // Has service worker state changed?\n\t\t\t\t\t\t\t    switch (this.newWorker.state)\n\t\t\t\t\t\t\t    {\n\t\t\t\t\t\t\t\t    case 'installed':\n\n\t\t\t\t\t\t\t\t\t    // There is a new service worker available, show the\n\t\t\t\t\t\t\t\t\t    // notification\n\t\t\t\t\t\t\t\t\t    if (navigator.serviceWorker.controller)\n\t\t\t\t\t\t\t\t\t    {\n\t\t\t\t\t\t\t\t\t\t    console.log(\"SW DETECTING UPDATE 2\");\n\t\t\t\t\t\t\t\t\t\t    // this._notifyUpdate();\n\t\t\t\t\t\t\t\t\t\t    this.update = true;\n\t\t\t\t\t\t\t\t\t    }\n\t\t\t\t\t\t\t\t\t    break;\n\t\t\t\t\t\t\t    }\n\t\t\t\t\t\t    });\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\t\t\tunregister_sw()\n\t\t\t{\n\t\t\t\tthis.registration.unregister()\n\t\t\t\t    .then(() =>\n\t\t\t\t          {\n\t\t\t\t\t          console.log(\"Unregister\");\n\t\t\t\t          });\n\t\t\t},\n\t\t\trequest_from_sw()\n\t\t\t{\n\t\t\t\tlet request = new Request(`/${this.swName}`);\n\t\t\t\tconst requestOptions = {method: 'GET'};\n\t\t\t\treturn fetch(request, requestOptions)\n\t\t\t\t.then((response) =>\n\t\t\t\t      {\n\t\t\t\t\t      return {\n\t\t\t\t\t\t      request: request,\n\t\t\t\t\t\t      response: response\n\t\t\t\t\t      };\n\t\t\t\t      })\n\t\t\t\t.catch(error =>\n\t\t\t\t       {\n\t\t\t\t\t       console.error(error);\n\t\t\t\t\t       console.error(JSON.stringify(error));\n\t\t\t\t\t       return {\n\t\t\t\t\t\t       request: request,\n\t\t\t\t\t\t       response: response\n\t\t\t\t\t       };\n\t\t\t\t       });\n\t\t\t},\n\t\t\tsend_new_sw()\n\t\t\t{\n\t\t\t\tthis.$emit('updateRequest');\n\t\t\t\t// this.newWorker.postMessage({action: 'skipWaiting'});\n\t\t\t},\n\t\t}\n\t}\n</script>\n\n<style scoped>\n\n</style>\n"],"sourceRoot":"src/views"}]}