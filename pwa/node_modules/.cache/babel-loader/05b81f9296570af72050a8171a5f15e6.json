{"remainingRequest":"/Users/ale/Documents/Bachproef/pwa-3/node_modules/babel-loader/lib/index.js!/Users/ale/Documents/Bachproef/pwa-3/node_modules/vuetify-loader/lib/loader.js!/Users/ale/Documents/Bachproef/pwa-3/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/ale/Documents/Bachproef/pwa-3/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ale/Documents/Bachproef/pwa-3/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/ale/Documents/Bachproef/pwa-3/src/App.vue","mtime":1556562336049},{"path":"/Users/ale/Documents/Bachproef/pwa-3/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ale/Documents/Bachproef/pwa-3/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/ale/Documents/Bachproef/pwa-3/node_modules/vuetify-loader/lib/loader.js","mtime":1549812933000},{"path":"/Users/ale/Documents/Bachproef/pwa-3/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ale/Documents/Bachproef/pwa-3/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _JSON$stringify from \"/Users/ale/Documents/Bachproef/pwa-3/node_modules/@babel/runtime-corejs2/core-js/json/stringify\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/ale/Documents/Bachproef/pwa-3/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Product from \"./components/Product\";\nimport Post from './components/Post';\nimport { MagentoAPIService } from \"./services/MagentoAPIService\";\nimport { FirebaseService } from \"./services/FirebaseService\";\nimport * as firebase from 'firebase/app';\nimport 'firebase/messaging';\nimport * as localForage from \"localforage\";\nimport axios from 'axios';\nexport default {\n  name: 'App',\n  components: {\n    Product: Product,\n    Post: Post\n  },\n  data: function data() {\n    return {\n      firebase: {\n        config: {\n          apiKey: \"AIzaSyAyGInviSJMCyZV_XHLIRa8fKAt-wsaAJA\",\n          authDomain: \"pwademo-763.firebaseapp.com\",\n          databaseURL: \"https://pwademo-763.firebaseio.com\",\n          projectId: \"pwademo-763\",\n          storageBucket: \"pwademo-763.appspot.com\",\n          messagingSenderId: \"857384407396\"\n        },\n        messaging: null,\n        token: null\n      },\n      service_worker: {\n        refreshing: false,\n        reloadRequested: false\n      },\n      lf: null,\n      currentWorker: null,\n      newWorker: null,\n      drawer: '',\n      items: [{\n        title: 'Home',\n        icon: 'dashboard',\n        link: '/'\n      }, {\n        title: 'About',\n        icon: 'question_answer',\n        link: '/about'\n      }, {\n        title: 'Products',\n        icon: 'question_answer',\n        link: '/products'\n      }, {\n        title: 'Update',\n        icon: 'question_answer',\n        link: '/update'\n      }, {\n        title: 'Bare Update',\n        icon: 'question_answer',\n        link: '/update-without-skip-and-claim'\n      }, {\n        title: 'Update with skip',\n        icon: 'question_answer',\n        link: '/update-with-skip-no-claim'\n      }, {\n        title: 'Update with skip & claim',\n        icon: 'question_answer',\n        link: '/update-with-skip-and-claim'\n      }]\n    };\n  },\n  computed: {\n    posts: function posts() {\n      var posts = this.$store.getters['posts/allPosts']; // console.log(\"All Posts: \", posts);\n\n      return posts;\n    },\n    products: function products() {\n      var products = this.$store.getters['products/allProducts']; // console.log(\"All Posts: \", posts);\n\n      return products;\n    },\n    firebase_token: function firebase_token() {}\n  },\n  created: function () {\n    var _created = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee() {\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              localForage.config({\n                name: 'Alessio',\n                version: 1.0,\n                size: 4980736,\n                // Size of database, in bytes. WebSQL-only for now.\n                storeName: 'lf',\n                // Should be alphanumeric, with underscores.\n                description: 'some description'\n              });\n              this.lf = localForage.createInstance({\n                name: \"lf\"\n              });\n              this.sw();\n              this.firebaseNotificationsHandler(); // console.log(\"Token from memory\",this.firebase.token);\n              // const token = await this.lf.getItem(\"token\");\n              // console.log(\"Token from storage\",token);\n              // const payload = {\n              // \t\"title\": \"Notification sent\",\n              // \t\"body\": \"Notification sent body from app\",\n              // \t\"icon\": \"/images/icons/icon-72x72.png\",\n              // \t\"action\": \"https://localhost:8080\"\n              // };\n              // let axiosRequest = {\n              // \t// method: 'POST',\n              // \t// url: 'https://fcm.googleapis.com/fcm/send',\n              // \tdata: {\n              // \t\t\"to\": token,\n              // \t\t\"collapse_key\": \"type_a\",\n              // \t\t\"notification\":\n              // \t\t{\n              // \t\t\t\"title\": payload.title,\n              // \t\t\t\"body\": payload.body,\n              // \t\t\t\"icon\": payload.icon,\n              // \t\t\t\"click_action\": payload.action\n              // \t\t},\n              // \t\t\"data\":\n              // \t\t{\n              // \t\t\t\"shown\": false\n              // \t\t}\n              //\n              // \t},\n              // };\n              // let headers = {\n              // \t'Content-Type': 'application/json',\n              // \t\"Authorization\": 'key=AAAAx6AX0WQ:APA91bGRzt5nXLXc1E1zvDat51z-Ys0pKlV0N-Uo1WKjfuB4VAJVYDuiVSXEm1PexQ22kPT6bZcrv1EFOs4J9ebMEYRJThX6Z5kBMDfUXQfyscw7-brEsyd9x6ZEWagbsxssecBRsJwF'\n              // }\n              //\n              // axios({\n              // \t      method: 'POST',\n              // \t      url: 'https://fcm.googleapis.com/fcm/send',\n              // \t      data: axiosRequest.data,\n              // \t      headers: headers,\n              //\n              //       })\n              // .then((response) => console.log(response))\n              // .catch((error) =>\n              //        console.error(\"Notification send error: \", error));\n              // axios.post('https://fcm.googleapis.com/fcm/send', axiosRequest, headers)\n              //      .then((response) => console.log(response))\n              //      .catch((error) =>\n              //             console.error(\"Notification send error: \", error));\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function created() {\n      return _created.apply(this, arguments);\n    }\n\n    return created;\n  }(),\n  methods: {\n    _firebaseInit: function _firebaseInit() {\n      firebase.initializeApp(this.firebase.config);\n      this.firebase.messaging = firebase.messaging();\n      this.firebase.messaging.usePublicVapidKey(\"BHEX_KV05JO3refzgJbNXaXObnSiCb2kjx1rOsLWhMon4dea2ddfiYD0iLBHm6DsQkVp8sCLr2Ypuuz6haDnOzo\");\n    },\n    _firebaseGetToken: function _firebaseGetToken() {\n      var THIS = this;\n      return THIS.firebase.messaging.getToken().then(function (currentToken) {\n        if (currentToken) {\n          THIS.firebase.token = currentToken;\n          THIS.lf.setItem(\"token\", currentToken).then(function (value) {\n            console.log(\"LocalForage: \", value);\n          }).catch(function (error) {\n            console.error(\"LocalForage: \", error);\n          });\n          console.log(\"TOKEN: \", currentToken);\n          currentToken;\n        } else {\n          console.log('No Instance ID token available. Request permission to generate one.');\n        }\n      }).catch(function (err) {\n        console.log('An error occurred while retrieving token. ', err); // setTokenSentToServer(false);\n      });\n    },\n    _firebaseRequestPermission: function _firebaseRequestPermission() {\n      var _this = this;\n\n      var THIS = this;\n      this.firebase.messaging.requestPermission().then(function () {\n        console.log('Notification permission granted.');\n\n        _this._firebaseGetToken().then(function (response) {\n          var payload = {\n            \"to\": THIS.firebase.token,\n            \"collapse_key\": \"type_a\",\n            \"notification\": {\n              \"title\": \"payload.title\",\n              \"body\": \"payload.body\",\n              \"icon\": \"payload.icon\",\n              \"click_action\": \"payload.action\"\n            },\n            \"data\": {\n              \"shown\": false\n            }\n          };\n          FirebaseService.sendNotificationToSelf(payload);\n        });\n      }).catch(function (err) {\n        console.log('Unable to get permission to notify.', err);\n      });\n    },\n    firebaseNotificationsHandler: function firebaseNotificationsHandler() {\n      var _this2 = this;\n\n      var THIS = this;\n\n      this._firebaseInit();\n\n      this._firebaseRequestPermission(); // -----------------------------------------------------------------------------------------------------\n      // Event listeners\n\n\n      THIS.firebase.messaging.onTokenRefresh(function () {\n        _this2._firebaseGetToken();\n\n        console.log(\"TOKEN REFRESHED: \", THIS.firebase.token);\n      });\n      THIS.firebase.messaging.onMessage(function (payload) {\n        console.log('Message received. ', payload);\n\n        if (Notification.permission === 'granted') {\n          var notification = new Notification(payload.notification.title, {\n            icon: payload.notification.icon,\n            body: payload.notification.body\n          });\n\n          notification.onclick = function () {\n            console.log(\"NOTIFCATION CLICK\");\n            window.open(payload.notification.click_action, \"_blank\");\n          };\n\n          return notification;\n        }\n      });\n    },\n    send_message_to_sw: function send_message_to_sw(msg) {\n      if ('serviceWorker' in navigator) {\n        console.log(\"Sending to SW...\");\n        var currentWorker = this.currentWorker.active;\n        var cookie = \"Type=\".concat(msg, \";\");\n        document.cookie = cookie;\n        currentWorker.postMessage({\n          \"dev_comm\": true,\n          \"cookie\": cookie\n        }); // navigator\n        // .serviceWorker.ready\n        // .then(function (serviceWorkerRegistration)\n        //       {\n        // \t      // Let's see if you have a subscription already\n        // \t      return serviceWorkerRegistration.pushManager.getSubscription();\n        //       })\n        // .then(function (subscription)\n        //       {\n        // \t      if (!subscription)\n        // \t      {\n        // \t\t      // You do not have subscription\n        //               console.error(\"No sw subscription!\")\n        // \t      }\n        // \t      // You have subscription.\n        // \t      // Send data to service worker\n        // \t      console.log(\"Sending to SW...\");\n        // \t      const cookie = `Type=${msg}`;\n        // \t      document.cookie = cookie;\n        // \t      navigator.serviceWorker.controller.postMessage(\n        // \t      {\n        // \t\t      \"data\":\n        // \t\t      {\n        // \t\t\t      \"dev_comm\": true,\n        // \t\t\t      \"cookie\": cookie\n        // \t\t      }\n        // \t      });\n        //\n        //       })\n      }\n    },\n    request_from_sw: function request_from_sw() {\n      var request = new Request(\"https://localhost:8080/update.js\");\n      var requestOptions = {\n        method: 'GET'\n      };\n      return fetch(request, requestOptions).then(function (response) {\n        return {\n          request: request,\n          response: response\n        };\n      }).catch(function (error) {\n        console.error(error);\n        console.error(_JSON$stringify(error));\n        return {\n          request: request,\n          response: response\n        };\n      });\n    },\n    send_new_sw: function send_new_sw() {\n      if (this.newWorker) this.newWorker.postMessage({\n        action: 'skipWaiting'\n      });\n    },\n    sw: function sw() {\n      var _this3 = this;\n\n      window.addEventListener('load',\n      /*#__PURE__*/\n      _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2() {\n        var registration, THIS;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                navigator.serviceWorker.register('/sw.js', {\n                  scope: '/'\n                }).then(function (registration) {\n                  // Registration was successful\n                  _this3.currentWorker = registration;\n                  console.log('SW GLOBAL OK: ', registration.scope);\n                }, function (err) {\n                  // registration failed :(\n                  console.log('SW registration failed: ', err);\n                }).then(function () {\n                  console.log(\"SW GLOBAL READY\");\n                  return navigator.serviceWorker.ready;\n                }); // Source: https://stackoverflow.com/questions/37573482/to-check-if-serviceworker-is-in-waiting-state\n\n                _context2.next = 3;\n                return navigator.serviceWorker.register('/sw.js');\n\n              case 3:\n                registration = _context2.sent;\n\n                if (registration.waiting && registration.active) {\n                  _this3.newWorker = registration.waiting;\n                } else {\n                  registration.addEventListener('updatefound', function () {\n                    _this3.newWorker = registration.installing;\n\n                    _this3.newWorker.addEventListener('statechange', function () {\n                      // Has service worker state changed?\n                      switch (_this3.newWorker.state) {\n                        case 'installed':\n                          // There is a new service worker available, show the\n                          // notification\n                          if (navigator.serviceWorker.controller) {\n                            console.log(\"NEW SW AVAILABLE\");\n                          }\n\n                          break;\n                      }\n                    });\n                  });\n                } // this.lf.setItem(\"newWorker\", this.newWorker);\n\n\n                THIS = _this3;\n                navigator.serviceWorker.addEventListener('controllerchange', function () {\n                  console.log(\"SW CONTROLLERCHANGE \");\n\n                  if (!THIS.service_worker.refreshing && THIS.service_worker.reloadRequested) {\n                    window.location.reload();\n                    THIS.service_worker.refreshing = true;\n                  } else {\n                    THIS.service_worker.refreshing = false;\n                    THIS.service_worker.reloadRequested = false;\n                    return;\n                  }\n                });\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      })));\n    },\n    _navigateTo: function _navigateTo(url) {\n      window.location = url;\n    }\n  }\n};",{"version":3,"sources":["App.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <v-app>\n        <v-toolbar app>\n            <v-toolbar-side-icon @click.stop=\"drawer = !drawer\"></v-toolbar-side-icon>\n            <v-toolbar-title class=\"black--text\">PWA Demo</v-toolbar-title>\n            <v-btn icon\n                   @click=\"requestPermission()\">\n                <v-icon>notifications</v-icon>\n            </v-btn>\n            <v-spacer></v-spacer>\n            <v-text-field hide-details\n                          prepend-icon=\"search\"\n                          single-line></v-text-field>\n            <v-btn icon>\n                <v-icon>favorite</v-icon>\n            </v-btn>\n            <v-btn icon>\n                <v-icon>shopping_cart</v-icon>\n            </v-btn>\n            <v-btn icon>\n                <v-icon>person</v-icon>\n            </v-btn>\n        </v-toolbar>\n\n        <v-content>\n            <v-navigation-drawer v-model=\"drawer\"\n                                 absolute\n                                 temporary>\n                <v-list class=\"pa-1\">\n                    <v-list-tile avatar>\n                        <v-list-tile-avatar>\n                            <img src=\"https://randomuser.me/api/portraits/men/85.jpg\">\n                        </v-list-tile-avatar>\n\n                        <v-list-tile-content>\n                            <v-list-tile-title>John Leider</v-list-tile-title>\n                        </v-list-tile-content>\n                    </v-list-tile>\n                </v-list>\n\n                <v-list class=\"pt-0\"\n                        dense>\n                    <v-divider></v-divider>\n\n                    <v-list-tile v-for=\"item in items\"\n                                 :key=\"item.title\"\n                                 @click=\"_navigateTo(item.link)\">\n                        <v-list-tile-action>\n                            <v-icon>{{ item.icon }}</v-icon>\n                        </v-list-tile-action>\n\n                        <v-list-tile-content>\n                            <v-list-tile-title>{{ item.title }}</v-list-tile-title>\n                        </v-list-tile-content>\n                    </v-list-tile>\n                </v-list>\n            </v-navigation-drawer>\n            <router-view />\n<!--            <a style=\"position:absolute; top: 65px; right: 10px;\"-->\n<!--               v-on:click=\"send_message_to_sw(1)\">Cookie 1-->\n<!--            </a>-->\n<!--            <a style=\"position:absolute; top: 80px; right: 10px;\"-->\n<!--               v-on:click=\"send_message_to_sw(2)\">Cookie 2-->\n<!--            </a>-->\n<!--            <a style=\"position:absolute; top: 95px; right: 10px;\"-->\n<!--               v-on:click=\"send_message_to_sw(3)\">Cookie 3-->\n<!--            </a>-->\n<!--            <a style=\"position:absolute; top: 35px; right: 10px;\"-->\n<!--               v-on:click=\"send_new_sw()\">UPDATE SW-->\n<!--            </a>-->\n<!--            <a style=\"position:absolute; top: 50px; right: 10px;\"-->\n<!--               v-on:click=\"request_from_sw()\">REQUEST-->\n<!--            </a>-->\n\n        </v-content>\n    </v-app>\n</template>\n\n<script>\n\timport Product from \"./components/Product\";\n\timport Post from './components/Post'\n\timport {MagentoAPIService} from \"./services/MagentoAPIService\";\n\timport  {FirebaseService} from \"./services/FirebaseService\";\n\timport * as firebase from 'firebase/app';\n\timport 'firebase/messaging';\n\timport * as localForage from \"localforage\";\n\timport axios from 'axios';\n\n\texport default {\n\t\tname: 'App',\n\t\tcomponents: {\n\t\t\tProduct,\n\t\t\tPost\n\t\t},\n\t\tdata()\n\t\t{\n\t\t\treturn {\n\t\t\t\tfirebase:\n\t\t\t\t{\n\t\t\t\t\tconfig: {\n\t\t\t\t\t\tapiKey: \"AIzaSyAyGInviSJMCyZV_XHLIRa8fKAt-wsaAJA\",\n\t\t\t\t\t\tauthDomain: \"pwademo-763.firebaseapp.com\",\n\t\t\t\t\t\tdatabaseURL: \"https://pwademo-763.firebaseio.com\",\n\t\t\t\t\t\tprojectId: \"pwademo-763\",\n\t\t\t\t\t\tstorageBucket: \"pwademo-763.appspot.com\",\n\t\t\t\t\t\tmessagingSenderId: \"857384407396\"\n\t\t\t\t\t},\n\t\t\t\t\tmessaging: null,\n\t\t\t\t\ttoken: null,\n\t\t\t\t},\n\t\t\t\tservice_worker:\n\t\t\t\t{\n\t\t\t\t\trefreshing: false,\n\t\t\t\t\treloadRequested: false\n\t\t\t\t},\n\t\t\t\tlf: null,\n                currentWorker: null,\n\t\t\t\tnewWorker: null,\n\t\t\t\tdrawer: '',\n\t\t\t\titems: [\n\t\t\t\t\t{title: 'Home', icon: 'dashboard', link: '/'},\n\t\t\t\t\t{title: 'About', icon: 'question_answer', link: '/about'},\n\t\t\t\t\t{title: 'Products', icon: 'question_answer', link: '/products'},\n\t\t\t\t\t{title: 'Update', icon: 'question_answer', link: '/update'},\n\t\t\t\t\t{title: 'Bare Update', icon: 'question_answer', link: '/update-without-skip-and-claim'},\n\t\t\t\t\t{title: 'Update with skip', icon: 'question_answer', link: '/update-with-skip-no-claim'},\n\t\t\t\t\t{title: 'Update with skip & claim', icon: 'question_answer', link: '/update-with-skip-and-claim'},\n\t\t\t\t]\n\t\t\t}\n\t\t},\n\t\tcomputed:\n\t\t{\n\t\t\tposts: function ()\n\t\t\t{\n\t\t\t\tlet posts = this.$store.getters['posts/allPosts'];\n\t\t\t\t// console.log(\"All Posts: \", posts);\n\t\t\t\treturn posts;\n\t\t\t},\n\t\t\tproducts: function ()\n\t\t\t{\n\t\t\t\tlet products = this.$store.getters['products/allProducts'];\n\t\t\t\t// console.log(\"All Posts: \", posts);\n\t\t\t\treturn products;\n\t\t\t},\n            firebase_token()\n            {\n\n            }\n\t\t},\n\t\tasync created()\n\t\t{\n\t\t\tlocalForage.config({\n\t\t\t\t                   name: 'Alessio',\n\t\t\t\t                   version: 1.0,\n\t\t\t\t                   size: 4980736, // Size of database, in bytes. WebSQL-only for now.\n\t\t\t\t                   storeName: 'lf', // Should be alphanumeric, with underscores.\n\t\t\t\t                   description: 'some description'\n\t\t\t                   });\n\t\t\tthis.lf = localForage.createInstance({name: \"lf\"});\n\t\t\tthis.sw();\n\t\t\tthis.firebaseNotificationsHandler();\n\n            // console.log(\"Token from memory\",this.firebase.token);\n\t\t\t// const token = await this.lf.getItem(\"token\");\n\t\t\t// console.log(\"Token from storage\",token);\n\t\t\t// const payload = {\n\t\t\t// \t\"title\": \"Notification sent\",\n\t\t\t// \t\"body\": \"Notification sent body from app\",\n\t\t\t// \t\"icon\": \"/images/icons/icon-72x72.png\",\n\t\t\t// \t\"action\": \"https://localhost:8080\"\n\t\t\t// };\n\t\t\t// let axiosRequest = {\n\t\t\t// \t// method: 'POST',\n\t\t\t// \t// url: 'https://fcm.googleapis.com/fcm/send',\n\t\t\t// \tdata: {\n\t\t\t// \t\t\"to\": token,\n\t\t\t// \t\t\"collapse_key\": \"type_a\",\n\t\t\t// \t\t\"notification\":\n\t\t\t// \t\t{\n\t\t\t// \t\t\t\"title\": payload.title,\n\t\t\t// \t\t\t\"body\": payload.body,\n\t\t\t// \t\t\t\"icon\": payload.icon,\n\t\t\t// \t\t\t\"click_action\": payload.action\n\t\t\t// \t\t},\n\t\t\t// \t\t\"data\":\n\t\t\t// \t\t{\n\t\t\t// \t\t\t\"shown\": false\n\t\t\t// \t\t}\n            //\n\t\t\t// \t},\n\t\t\t// };\n\t\t\t// let headers = {\n\t\t\t// \t'Content-Type': 'application/json',\n\t\t\t// \t\"Authorization\": 'key=AAAAx6AX0WQ:APA91bGRzt5nXLXc1E1zvDat51z-Ys0pKlV0N-Uo1WKjfuB4VAJVYDuiVSXEm1PexQ22kPT6bZcrv1EFOs4J9ebMEYRJThX6Z5kBMDfUXQfyscw7-brEsyd9x6ZEWagbsxssecBRsJwF'\n\t\t\t// }\n            //\n\t\t\t// axios({\n\t\t\t// \t      method: 'POST',\n\t\t\t// \t      url: 'https://fcm.googleapis.com/fcm/send',\n\t\t\t// \t      data: axiosRequest.data,\n\t\t\t// \t      headers: headers,\n            //\n\t\t\t//       })\n\t\t\t// .then((response) => console.log(response))\n\t\t\t// .catch((error) =>\n\t\t\t//        console.error(\"Notification send error: \", error));\n\t\t\t// axios.post('https://fcm.googleapis.com/fcm/send', axiosRequest, headers)\n\t\t\t//      .then((response) => console.log(response))\n\t\t\t//      .catch((error) =>\n\t\t\t//             console.error(\"Notification send error: \", error));\n\t\t},\n\t\tmethods:\n\t\t{\n\t\t\t_firebaseInit()\n\t\t\t{\n\t\t\t\tfirebase.initializeApp(this.firebase.config);\n\t\t\t\tthis.firebase.messaging = firebase.messaging();\n\t\t\t\tthis.firebase.messaging.usePublicVapidKey(\"BHEX_KV05JO3refzgJbNXaXObnSiCb2kjx1rOsLWhMon4dea2ddfiYD0iLBHm6DsQkVp8sCLr2Ypuuz6haDnOzo\");\n\t\t\t},\n\t\t\t_firebaseGetToken()\n\t\t\t{\n\t\t\t\tconst THIS = this;\n\t\t\t\treturn THIS.firebase.messaging\n\t\t\t\t    .getToken()\n\t\t\t\t    .then(function (currentToken)\n\t\t\t\t          {\n\t\t\t\t\t          if (currentToken)\n\t\t\t\t\t          {\n\t\t\t\t\t\t          THIS.firebase.token = currentToken;\n\t\t\t\t\t\t          THIS.lf.setItem(\"token\", currentToken)\n\t\t\t\t\t\t              .then((value) =>\n\t\t\t\t\t\t                    {\n\t\t\t\t\t\t\t                    console.log(\"LocalForage: \", value)\n\t\t\t\t\t\t                    })\n\t\t\t\t\t\t              .catch((error) =>\n\t\t\t\t\t\t                     {\n\t\t\t\t\t\t\t                     console.error(\"LocalForage: \", error)\n\t\t\t\t\t\t                     });\n\t\t\t\t\t\t          console.log(\"TOKEN: \", currentToken);\n\t\t\t\t\t\t          currentToken;\n\t\t\t\t\t          } else\n\t\t\t\t\t          {\n\t\t\t\t\t\t          console.log('No Instance ID token available. Request permission to generate one.');\n\t\t\t\t\t          }\n\t\t\t\t          })\n\t\t\t\t    .catch(function (err)\n\t\t\t\t           {\n\t\t\t\t\t           console.log('An error occurred while retrieving token. ', err);\n\t\t\t\t\t           // setTokenSentToServer(false);\n\t\t\t\t           });\n\n\t\t\t},\n\t\t\t_firebaseRequestPermission()\n\t\t\t{\n\t\t\t\tconst THIS= this;\n\t\t\t\tthis.firebase.messaging\n\t\t\t\t    .requestPermission()\n\t\t\t\t    .then(() =>\n\t\t\t\t          {\n\t\t\t\t\t          console.log('Notification permission granted.');\n\t\t\t\t\t          this._firebaseGetToken()\n                                  .then((response) =>\n                                        {\n\t                                        let payload = {\n\t\t                                        \t\t\t                                        \"to\": THIS.firebase.token,\n\t\t\t                                        \"collapse_key\": \"type_a\",\n\t\t\t                                        \"notification\":\n\t\t\t                                        {\n\t\t\t\t                                        \"title\": \"payload.title\",\n\t\t\t\t                                        \"body\": \"payload.body\",\n\t\t\t\t                                        \"icon\": \"payload.icon\",\n\t\t\t\t                                        \"click_action\": \"payload.action\"\n\t\t\t                                        },\n\t\t\t                                        \"data\":\n\t\t\t                                        {\n\t\t\t\t                                        \"shown\": false\n\t\t\t                                        }\n\t                                        };\n                                        \tFirebaseService.sendNotificationToSelf(payload)\n                                        })\n\n\t\t\t\t          })\n\t\t\t\t    .catch((err) =>\n\t\t\t\t           {\n\t\t\t\t\t           console.log('Unable to get permission to notify.', err);\n\t\t\t\t           });\n\t\t\t},\n\t\t\tfirebaseNotificationsHandler()\n\t\t\t{\n\t\t\t\tconst THIS = this;\n\t\t\t\tthis._firebaseInit();\n\t\t\t\tthis._firebaseRequestPermission();\n\n\t\t\t\t// -----------------------------------------------------------------------------------------------------\n\t\t\t\t// Event listeners\n\n\t\t\t\tTHIS.firebase.messaging\n\t\t\t\t    .onTokenRefresh(\n\t\t\t\t    () =>\n\t\t\t\t    {\n\t\t\t\t\t    this._firebaseGetToken();\n\t\t\t\t\t    console.log(\"TOKEN REFRESHED: \", THIS.firebase.token)\n\t\t\t\t    });\n\n\t\t\t\tTHIS.firebase.messaging\n\t\t\t\t    .onMessage(\n\t\t\t\t    (payload) =>\n\t\t\t\t    {\n\t\t\t\t\t    console.log('Message received. ', payload);\n\t\t\t\t\t    if (Notification.permission === 'granted')\n\t\t\t\t\t    {\n\t\t\t\t\t\t    const notification = new Notification(payload.notification.title, {\n\t\t\t\t\t\t\t    icon: payload.notification.icon,\n\t\t\t\t\t\t\t    body: payload.notification.body,\n\t\t\t\t\t\t    });\n\t\t\t\t\t\t    notification.onclick = function ()\n\t\t\t\t\t\t    {\n\t\t\t\t\t\t\t    console.log(\"NOTIFCATION CLICK\");\n\t\t\t\t\t\t\t    window.open(payload.notification.click_action,\n\t\t\t\t\t\t\t                \"_blank\");\n\t\t\t\t\t\t    };\n\t\t\t\t\t\t    return notification;\n\t\t\t\t\t    }\n\t\t\t\t    });\n\t\t\t},\n\t\t\tsend_message_to_sw(msg)\n\t\t\t{\n\t\t\t\tif ('serviceWorker' in navigator)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"Sending to SW...\");\n\t\t\t\t    const currentWorker = this.currentWorker.active;\n\t\t\t\t\tlet cookie = `Type=${msg};`;\n\t\t\t\t\tdocument.cookie = cookie;\n\t\t\t\t\tcurrentWorker.postMessage(\n\t\t\t\t\t{\n\t\t\t\t\t\t\t\"dev_comm\": true,\n\t\t\t\t\t\t\t\"cookie\": cookie\n\t\t\t\t\t});\n\n\n\t\t\t\t\t// navigator\n\t\t\t\t\t// .serviceWorker.ready\n\t\t\t\t\t// .then(function (serviceWorkerRegistration)\n\t\t\t\t\t//       {\n\t\t\t\t\t// \t      // Let's see if you have a subscription already\n\t\t\t\t\t// \t      return serviceWorkerRegistration.pushManager.getSubscription();\n\t\t\t\t\t//       })\n\t\t\t\t\t// .then(function (subscription)\n\t\t\t\t\t//       {\n\t\t\t\t\t// \t      if (!subscription)\n\t\t\t\t\t// \t      {\n\t\t\t\t\t// \t\t      // You do not have subscription\n                    //               console.error(\"No sw subscription!\")\n\t\t\t\t\t// \t      }\n\t\t\t\t\t// \t      // You have subscription.\n\t\t\t\t\t// \t      // Send data to service worker\n\t\t\t\t\t// \t      console.log(\"Sending to SW...\");\n\t\t\t\t\t// \t      const cookie = `Type=${msg}`;\n\t\t\t\t\t// \t      document.cookie = cookie;\n\t\t\t\t\t// \t      navigator.serviceWorker.controller.postMessage(\n\t\t\t\t\t// \t      {\n\t\t\t\t\t// \t\t      \"data\":\n\t\t\t\t\t// \t\t      {\n\t\t\t\t\t// \t\t\t      \"dev_comm\": true,\n\t\t\t\t\t// \t\t\t      \"cookie\": cookie\n\t\t\t\t\t// \t\t      }\n\t\t\t\t\t// \t      });\n                    //\n\t\t\t\t\t//       })\n\t\t\t\t}\n\t\t\t},\n\t\t\trequest_from_sw()\n\t\t\t{\n\t\t\t\tlet request = new Request(\"https://localhost:8080/update.js\");\n\t\t\t\tconst requestOptions = {method: 'GET'};\n\t\t\t\treturn fetch(request, requestOptions)\n\t\t\t\t.then((response) =>\n\t\t\t\t      {\n\t\t\t\t\t      return {\n\t\t\t\t\t\t      request: request,\n\t\t\t\t\t\t      response: response\n\t\t\t\t\t      };\n\t\t\t\t      })\n\t\t\t\t.catch(error =>\n\t\t\t\t       {\n\t\t\t\t\t       console.error(error);\n\t\t\t\t\t       console.error(JSON.stringify(error));\n\t\t\t\t\t       return {\n\t\t\t\t\t\t       request: request,\n\t\t\t\t\t\t       response: response\n\t\t\t\t\t       };\n\t\t\t\t       });\n\t\t\t},\n\t\t\tsend_new_sw()\n\t\t\t{\n\t\t\t\tif (this.newWorker)\n\t\t\t\t\tthis.newWorker.postMessage({action: 'skipWaiting'});\n\t\t\t},\n\t\t\tsw()\n\t\t\t{\n\t\t\t\twindow.addEventListener(\n\t\t\t\t'load',\n\t\t\t\tasync () =>\n\t\t\t\t{\n\t\t\t\t\tnavigator\n\t\t\t\t\t.serviceWorker\n\t\t\t\t\t.register('/sw.js', {scope: '/'})\n\t\t\t\t\t.then(\n\t\t\t\t\t(registration) =>\n\t\t\t\t\t{\n\t\t\t\t\t\t// Registration was successful\n                        this.currentWorker = registration;\n\t\t\t\t\t\tconsole.log('SW GLOBAL OK: ', registration.scope);\n\n\t\t\t\t\t}, (err) =>\n\t\t\t\t\t{\n\t\t\t\t\t\t// registration failed :(\n\t\t\t\t\t\tconsole.log('SW registration failed: ', err);\n\t\t\t\t\t})\n\t\t\t\t\t.then(() =>\n\t\t\t\t\t      {\n\t\t\t\t\t\t      console.log(\"SW GLOBAL READY\");\n\t\t\t\t\t\t      return navigator.serviceWorker.ready;\n\t\t\t\t\t      });\n\n\t\t\t\t\t// Source: https://stackoverflow.com/questions/37573482/to-check-if-serviceworker-is-in-waiting-state\n\t\t\t\t\tconst registration = await navigator.serviceWorker.register('/sw.js');\n\t\t\t\t\tif (registration.waiting && registration.active)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.newWorker = registration.waiting;\n\t\t\t\t\t} else\n\t\t\t\t\t{\n\t\t\t\t\t\tregistration.addEventListener(\n\t\t\t\t\t\t'updatefound',\n\t\t\t\t\t\t() =>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.newWorker = registration.installing;\n\n\t\t\t\t\t\t\tthis.newWorker\n\t\t\t\t\t\t\t    .addEventListener(\n\t\t\t\t\t\t\t    'statechange',\n\t\t\t\t\t\t\t    () =>\n\t\t\t\t\t\t\t    {\n\t\t\t\t\t\t\t\t    // Has service worker state changed?\n\t\t\t\t\t\t\t\t    switch (this.newWorker.state)\n\t\t\t\t\t\t\t\t    {\n\t\t\t\t\t\t\t\t\t    case 'installed':\n\n\t\t\t\t\t\t\t\t\t\t    // There is a new service worker available, show the\n\t\t\t\t\t\t\t\t\t\t    // notification\n\t\t\t\t\t\t\t\t\t\t    if (navigator.serviceWorker.controller)\n\t\t\t\t\t\t\t\t\t\t    {\n\t\t\t\t\t\t\t\t\t\t\t    console.log(\"NEW SW AVAILABLE\");\n\t\t\t\t\t\t\t\t\t\t    }\n\t\t\t\t\t\t\t\t\t\t    break;\n\t\t\t\t\t\t\t\t    }\n\t\t\t\t\t\t\t    });\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\t// this.lf.setItem(\"newWorker\", this.newWorker);\n\n\n\t\t\t\t\tconst THIS = this;\n\t\t\t\t\tnavigator.serviceWorker.addEventListener('controllerchange', function ()\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log(\"SW CONTROLLERCHANGE \");\n\t\t\t\t\t\tif (!THIS.service_worker.refreshing && THIS.service_worker.reloadRequested)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t\t\tTHIS.service_worker.refreshing = true;\n\n\t\t\t\t\t\t} else\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tTHIS.service_worker.refreshing = false;\n\t\t\t\t\t\t\tTHIS.service_worker.reloadRequested = false;\n\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t}\n\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t},\n\t\t\t_navigateTo(url)\n\t\t\t{\n\t\t\t\twindow.location = url;\n\t\t\t}\n\t\t}\n\t}\n\n</script>\n"],"sourceRoot":"src"}]}