{"remainingRequest":"/Users/ale/Documents/Bachproef/pwa-3/node_modules/thread-loader/dist/cjs.js!/Users/ale/Documents/Bachproef/pwa-3/node_modules/babel-loader/lib/index.js!/Users/ale/Documents/Bachproef/pwa-3/node_modules/vuetify-loader/lib/loader.js!/Users/ale/Documents/Bachproef/pwa-3/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/ale/Documents/Bachproef/pwa-3/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ale/Documents/Bachproef/pwa-3/src/components/Product.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/ale/Documents/Bachproef/pwa-3/src/components/Product.vue","mtime":1560358239679},{"path":"/Users/ale/Documents/Bachproef/pwa-3/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ale/Documents/Bachproef/pwa-3/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ale/Documents/Bachproef/pwa-3/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/ale/Documents/Bachproef/pwa-3/node_modules/vuetify-loader/lib/loader.js","mtime":1549812933000},{"path":"/Users/ale/Documents/Bachproef/pwa-3/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ale/Documents/Bachproef/pwa-3/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/ale/Documents/Bachproef/pwa-3/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.to-string\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { MagentoAPIService } from \"../services/MagentoAPIService\";\nimport { Product } from \"../objects/Product\";\nvar magentoApiService = new MagentoAPIService();\nexport default {\n  name: \"product\",\n  props: {\n    sku: String\n  },\n  data: function data() {\n    return {\n      cached: false,\n      product: null\n    };\n  },\n  computed: {// product()\n    // {\n    // \tlet product = this.$store.getters['products/product'](this.sku);\n    // \tif (product == null && this.sku != null)\n    // \t\tthis.fetchProduct(this.sku);\n    // \treturn product;\n    // }\n  },\n  methods: {\n    _navigate: function _navigate() {\n      var path = \"/product/\".concat(this.sku);\n      this.$router.push({\n        path: path,\n        query: {\n          t: +new Date()\n        }\n      });\n    },\n    searchCache: function searchCache(sku) {\n      return window.caches.open('products-cache').then(function (cache) {\n        // console.log(\"Searching keys for id\", sku);\n        // console.log(\"KEYS\", keys);\n        return cache.keys().then(function (urls) {\n          for (var i = 0; i < urls.length; ++i) {\n            if (urls[i].url === \"\".concat(MagentoAPIService.PRODUCTS_API, \"/\").concat(sku)) return true;\n          }\n\n          return false;\n        });\n      }).catch(function (error) {\n        console.error(\"Error cached\", error);\n      });\n    },\n    fetchProduct: function fetchProduct(sku) {\n      this.send_message_to_sw(this.sku);\n      this.$store.dispatch('products/fetchProduct', sku).then(function (data) {\n        console.log('Fetch ok', data);\n      }).catch(function (error) {\n        console.error('Fetch error', error);\n      });\n    },\n    send_message_to_sw: function send_message_to_sw(sku) {\n      if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(function (serviceWorkerRegistration) {\n          // Let's see if you have a subscription already\n          return serviceWorkerRegistration.pushManager.getSubscription();\n        }).then(function (subscription) {\n          if (!subscription) {} // You do not have subscription\n          // You have subscription.\n          // Send data to service worker\n\n\n          console.log(\"Sending to SW...\");\n          navigator.serviceWorker.controller.postMessage({\n            \"data\": {\n              \"dev_comm\": true,\n              \"id\": sku\n            }\n          });\n        });\n      }\n    },\n    deleteProductFromCache: function deleteProductFromCache() {\n      this.send_message_to_sw(this.id);\n    },\n    toggleCache: function toggleCache() {\n      // event.preventDefault();\n      console.log(\"Firing for product: \", this.sku);\n\n      if (this.cached) {\n        this.deleteProductFromCache(); // this.cached = false;\n      } else {\n        this.fetchProduct(this.id); // this.cached = true;\n      }\n\n      console.log(\"Product \".concat(this.id, \": Cache = \").concat(this.cached)); // this.cached = !this.cached;\n    }\n  },\n  created: function () {\n    var _created = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee() {\n      var magentoService, product;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              /* return this.searchCache(this.sku)\n                         .then(result =>\n                               {\n              \t                 // console.log(\"Search from cache: \", result);\n              \t                 if (result != null)\n                        this.cached = result;\n                               }) */\n              // this.$store.dispatch('posts/fetchPost', this.id);\n              magentoService = new MagentoAPIService();\n              _context.next = 3;\n              return magentoService.getProductBySKU(this.sku);\n\n            case 3:\n              product = _context.sent;\n              if (product) this.product = product;\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function created() {\n      return _created.apply(this, arguments);\n    }\n\n    return created;\n  }()\n};",{"version":3,"sources":["Product.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCA,SAEA,iBAFA,QAIA,+BAJA;AAKA,SAEA,OAFA,QAIA,oBAJA;AAMA,IAAA,iBAAA,GAAA,IAAA,iBAAA,EAAA;AAEA,eACA;AACA,EAAA,IAAA,EAAA,SADA;AAEA,EAAA,KAAA,EACA;AACA,IAAA,GAAA,EAAA;AADA,GAHA;AAMA,EAAA,IAAA,EAAA,gBACA;AACA,WAAA;AACA,MAAA,MAAA,EAAA,KADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAAA;AAIA,GAZA;AAaA,EAAA,QAAA,EACA,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA,GAdA;AAuBA,EAAA,OAAA,EACA;AACA,IAAA,SADA,uBAEA;AACA,UAAA,IAAA,sBAAA,KAAA,GAAA,CAAA;AACA,WAAA,OAAA,CAAA,IAAA,CACA;AACA,QAAA,IAAA,EAAA,IADA;AAEA,QAAA,KAAA,EACA;AACA,UAAA,CAAA,EAAA,CAAA,IAAA,IAAA;AADA;AAHA,OADA;AAQA,KAZA;AAaA,IAAA,WAbA,uBAaA,GAbA,EAcA;AACA,aAAA,MAAA,CAAA,MAAA,CAAA,IAAA,CAAA,gBAAA,EACA,IADA,CACA,UAAA,KAAA,EACA;AACA;AACA;AACA,eAAA,KAAA,CAAA,IAAA,GACA,IADA,CACA,UAAA,IAAA,EACA;AACA,eAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,IAAA,CAAA,MAAA,EAAA,EAAA,CAAA,EACA;AACA,gBAAA,IAAA,CAAA,CAAA,CAAA,CAAA,GAAA,eACA,iBAAA,CAAA,YADA,cACA,GADA,CAAA,EAEA,OAAA,IAAA;AACA;;AACA,iBAAA,KAAA;AACA,SAVA,CAAA;AAWA,OAhBA,EAiBA,KAjBA,CAiBA,UAAA,KAAA,EACA;AACA,QAAA,OAAA,CAAA,KAAA,CAAA,cAAA,EAAA,KAAA;AACA,OApBA,CAAA;AAqBA,KApCA;AAqCA,IAAA,YArCA,wBAqCA,GArCA,EAsCA;AACA,WAAA,kBAAA,CAAA,KAAA,GAAA;AACA,WAAA,MAAA,CAAA,QAAA,CAAA,uBAAA,EAAA,GAAA,EACA,IADA,CACA,UAAA,IAAA,EACA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,UAAA,EAAA,IAAA;AACA,OAJA,EAKA,KALA,CAKA,UAAA,KAAA,EACA;AACA,QAAA,OAAA,CAAA,KAAA,CAAA,aAAA,EAAA,KAAA;AACA,OARA;AASA,KAjDA;AAkDA,IAAA,kBAlDA,8BAkDA,GAlDA,EAmDA;AACA,UAAA,mBAAA,SAAA,EACA;AACA,QAAA,SAAA,CAAA,aAAA,CAAA,KAAA,CACA,IADA,CACA,UAAA,yBAAA,EACA;AACA;AACA,iBAAA,yBAAA,CAAA,WAAA,CAAA,eAAA,EAAA;AACA,SALA,EAMA,IANA,CAMA,UAAA,YAAA,EACA;AACA,cAAA,CAAA,YAAA,EACA,CAEA,CAHA,CAEA;AAEA;AACA;;;AACA,UAAA,OAAA,CAAA,GAAA,CAAA,kBAAA;AACA,UAAA,SAAA,CAAA,aAAA,CAAA,UAAA,CAAA,WAAA,CACA;AACA,oBACA;AACA,0BAAA,IADA;AAEA,oBAAA;AAFA;AAFA,WADA;AASA,SAxBA;AAyBA;AACA,KAhFA;AAiFA,IAAA,sBAjFA,oCAkFA;AACA,WAAA,kBAAA,CAAA,KAAA,EAAA;AACA,KApFA;AAqFA,IAAA,WArFA,yBAsFA;AACA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,sBAAA,EAAA,KAAA,GAAA;;AACA,UAAA,KAAA,MAAA,EACA;AACA,aAAA,sBAAA,GADA,CAEA;AACA,OAJA,MAMA;AACA,aAAA,YAAA,CAAA,KAAA,EAAA,EADA,CAEA;AACA;;AACA,MAAA,OAAA,CAAA,GAAA,mBAAA,KAAA,EAAA,uBAAA,KAAA,MAAA,GAbA,CAcA;AACA;AArGA,GAxBA;AAgIA,EAAA,OAhIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkIA;;;;;;;AAQA;AACA,cAAA,cA3IA,GA2IA,IAAA,iBAAA,EA3IA;AAAA;AAAA,qBA4IA,cAAA,CAAA,eAAA,CAAA,KAAA,GAAA,CA5IA;;AAAA;AA4IA,cAAA,OA5IA;AA6IA,kBAAA,OAAA,EACA,KAAA,OAAA,GAAA,OAAA;;AA9IA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,CADA","sourcesContent":["<template>\n<v-flex xs12 sm6 lg4>\n    <a v-if=\"product\" v-on:click=\"_navigate()\" style=\"color: inherit\">\n        <img :src=\"product.getMainMedia()\" style=\"max-width:400px;width: 100%; max-height: 600px;\">\n        <div>\n            <h3>{{ product.getName() }}</h3>\n            <span style=\"display: inline-block;\">${{ product.getPrice()}}</span>\n            <div style=\"display: inline-block;float: right;position: relative;top: -1.5rem;\">\n                <v-btn fab\n                       dark\n                       small\n                       color=\"pink\">\n                    <v-icon dark>favorite</v-icon>\n                </v-btn>\n                <v-btn fab\n                       dark\n                       small\n                       color=\"teal\">\n                    <v-icon dark>add_shopping_cart</v-icon>\n                </v-btn>\n            </div>\n\n        </div>\n<!--        <span v-if=\"product.hasTierPrice()\">${{ product.getTierPrice()}}</span>-->\n<!--        <v-switch v-model=\"cached\"-->\n<!--                  @click.native=\"toggleCache();\"-->\n<!--                  :label=\"`Product cached: ${cached.toString()}`\"></v-switch>-->\n    </a>\n</v-flex>\n</template>\n\n<script>\nimport\n{\n    MagentoAPIService\n}\nfrom \"../services/MagentoAPIService\";\nimport\n{\n    Product\n}\nfrom \"../objects/Product\";\n\nconst magentoApiService = new MagentoAPIService();\n\nexport default\n{\n    name: \"product\",\n    props:\n    {\n        sku: String\n    },\n    data: function ()\n    {\n        return {\n            cached: false,\n            product: null\n        }\n    },\n    computed:\n    {\n        // product()\n        // {\n        // \tlet product = this.$store.getters['products/product'](this.sku);\n        // \tif (product == null && this.sku != null)\n        // \t\tthis.fetchProduct(this.sku);\n        // \treturn product;\n        // }\n    },\n    methods:\n    {\n        _navigate()\n        {\n            const path = `/product/${this.sku}`;\n            this.$router.push(\n            {\n                path,\n                query:\n                {\n                    t: +new Date()\n                }\n            });\n        },\n        searchCache(sku)\n        {\n            return window.caches.open('products-cache')\n                .then(cache =>\n                {\n                    // console.log(\"Searching keys for id\", sku);\n                    // console.log(\"KEYS\", keys);\n                    return cache.keys()\n                        .then(urls =>\n                        {\n                            for (let i = 0; i < urls.length; ++i)\n                            {\n                                if (urls[i].url ===\n                                    `${MagentoAPIService.PRODUCTS_API}/${sku}`)\n                                    return true;\n                            }\n                            return false;\n                        });\n                })\n                .catch(error =>\n                {\n                    console.error(\"Error cached\", error)\n                })\n        },\n        fetchProduct(sku)\n        {\n            this.send_message_to_sw(this.sku);\n            this.$store.dispatch('products/fetchProduct', sku)\n                .then((data) =>\n                {\n                    console.log('Fetch ok', data);\n                })\n                .catch((error) =>\n                {\n                    console.error('Fetch error', error);\n                });\n        },\n        send_message_to_sw(sku)\n        {\n            if ('serviceWorker' in navigator)\n            {\n                navigator.serviceWorker.ready\n                    .then(function (serviceWorkerRegistration)\n                    {\n                        // Let's see if you have a subscription already\n                        return serviceWorkerRegistration.pushManager.getSubscription();\n                    })\n                    .then(function (subscription)\n                    {\n                        if (!subscription)\n                        {\n                            // You do not have subscription\n                        }\n                        // You have subscription.\n                        // Send data to service worker\n                        console.log(\"Sending to SW...\");\n                        navigator.serviceWorker.controller.postMessage(\n                        {\n                            \"data\":\n                            {\n                                \"dev_comm\": true,\n                                \"id\": sku\n                            }\n                        });\n\n                    })\n            }\n        },\n        deleteProductFromCache()\n        {\n            this.send_message_to_sw(this.id);\n        },\n        toggleCache()\n        {\n            // event.preventDefault();\n            console.log(\"Firing for product: \", this.sku);\n            if (this.cached)\n            {\n                this.deleteProductFromCache()\n                // this.cached = false;\n            }\n            else\n            {\n                this.fetchProduct(this.id)\n                // this.cached = true;\n            }\n            console.log(`Product ${this.id}: Cache = ${this.cached}`);\n            // this.cached = !this.cached;\n        }\n\n    },\n    async created()\n    {\n        /* return this.searchCache(this.sku)\n                   .then(result =>\n                         {\n        \t                 // console.log(\"Search from cache: \", result);\n        \t                 if (result != null)\n\n                 this.cached = result;\n                         }) */\n        // this.$store.dispatch('posts/fetchPost', this.id);\n        let magentoService = new MagentoAPIService();\n        let product = await magentoService.getProductBySKU(this.sku);\n        if (product)\n            this.product = product;\n    }\n}\n</script>\n\n<style scoped>\n\n</style>\n"],"sourceRoot":"src/components"}]}