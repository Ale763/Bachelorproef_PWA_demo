{"remainingRequest":"/Users/ale/Documents/Bachproef/pwa-3/node_modules/babel-loader/lib/index.js!/Users/ale/Documents/Bachproef/pwa-3/node_modules/vuetify-loader/lib/loader.js!/Users/ale/Documents/Bachproef/pwa-3/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/ale/Documents/Bachproef/pwa-3/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ale/Documents/Bachproef/pwa-3/src/components/Post.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/ale/Documents/Bachproef/pwa-3/src/components/Post.vue","mtime":1556168882118},{"path":"/Users/ale/Documents/Bachproef/pwa-3/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ale/Documents/Bachproef/pwa-3/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/ale/Documents/Bachproef/pwa-3/node_modules/vuetify-loader/lib/loader.js","mtime":1549812933000},{"path":"/Users/ale/Documents/Bachproef/pwa-3/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ale/Documents/Bachproef/pwa-3/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.to-string\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters, mapActions } from 'vuex';\nexport default {\n  name: \"Post\",\n  props: {\n    id: Number\n  },\n  data: function data() {\n    return {\n      cached: false\n    };\n  },\n  computed: {\n    // ...mapGetters(['post'])\n    post: function post() {\n      var post = this.$store.getters['posts/post'](this.id); // console.log(\"Post is:....\", post);\n\n      if (post == null) this.fetchPost(this.id);\n      return post;\n    }\n  },\n  methods: {\n    searchCache: function searchCache(id) {\n      return window.caches.open('img-resources').then(function (cache) {\n        console.log(\"Searching keys for id\", id); // console.log(\"KEYS\", keys);\n\n        return cache.keys().then(function (urls) {\n          for (var i = 0; i < urls.length; ++i) {\n            if (urls[i].url === \"https://jsonplaceholder.typicode.com/posts/\".concat(id)) return true;\n          }\n\n          return false;\n        });\n      }).catch(function (error) {\n        console.error(\"Error cached\", error);\n      });\n    },\n    // ...mapActions(['posts/fetchPost'])\n    fetchPost: function fetchPost(id) {\n      this.send_message_to_sw(this.id);\n      this.$store.dispatch('posts/fetchPost', id).then(function (data) {\n        console.log('Fetch ok', data);\n      }).catch(function (error) {\n        console.error('Fetch error', error);\n      });\n    },\n    send_message_to_sw: function send_message_to_sw(id) {\n      if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(function (serviceWorkerRegistration) {\n          // Let's see if you have a subscription already\n          return serviceWorkerRegistration.pushManager.getSubscription();\n        }).then(function (subscription) {\n          if (!subscription) {} // You do not have subscription\n          // You have subscription.\n          // Send data to service worker\n\n\n          console.log(\"Sending to SW...\");\n          navigator.serviceWorker.controller.postMessage({\n            \"data\": {\n              \"dev_comm\": true,\n              \"id\": id\n            }\n          });\n        });\n      }\n    },\n    deletePostFromCache: function deletePostFromCache() {\n      this.send_message_to_sw(this.id);\n    },\n    toggleCache: function toggleCache() {\n      // event.preventDefault();\n      console.log(\"Firing for post: \", this.id);\n\n      if (this.cached) {\n        this.deletePostFromCache(); // this.cached = false;\n      } else {\n        this.fetchPost(this.id); // this.cached = true;\n      }\n\n      console.log(\"Post \".concat(this.id, \": Cache = \").concat(this.cached)); // this.cached = !this.cached;\n    }\n  },\n  created: function created() {\n    var _this = this;\n\n    var id = this.id;\n    return this.searchCache(id).then(function (result) {\n      console.log(\"Search from cache: \", result);\n      if (result != null) _this.cached = result;\n    }); // this.$store.dispatch('posts/fetchPost', this.id);\n  }\n};",{"version":3,"sources":["Post.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div v-if=\"post\" style=\"padding: 2rem 4rem;\">\n        <h3>{{ post.getTitle() }}</h3>\n        <span>UID: {{ post.getUid() }}</span><br> <span>Id: {{ post.getId() }}</span><br>\n        <span>{{ post.getBody() }}</span>\n        <v-switch v-model=\"cached\" @click.native=\"toggleCache();\"\n                  :label=\"`Post cached: ${cached.toString()}`\"></v-switch>\n    </div>\n</template>\n\n<script>\n\timport {mapGetters, mapActions} from 'vuex';\n\n\texport default {\n\t\tname: \"Post\",\n\t\tprops:\n\t\t{\n\t\t\tid: Number\n\t\t},\n\t\tdata: function ()\n\t\t{\n\t\t\treturn {\n\t\t\t\tcached: false\n\t\t\t}\n\t\t},\n\t\tcomputed:\n\t\t{\n\t\t\t// ...mapGetters(['post'])\n\t\t\tpost()\n\t\t\t{\n\t\t\t\tlet post = this.$store.getters['posts/post'](this.id);\n\t\t\t\t// console.log(\"Post is:....\", post);\n\t\t\t\tif (post == null)\n\t\t\t\t\tthis.fetchPost(this.id);\n\n\n\t\t\t\treturn post;\n\t\t\t}\n\t\t}\n\t\t,\n\t\tmethods:\n\t\t{\n\t\t\tsearchCache(id)\n            {\n\t            return window.caches.open('img-resources')\n\t                  .then( cache =>\n\t                         {\n\t\t                         console.log(\"Searching keys for id\", id);\n\t\t                         // console.log(\"KEYS\", keys);\n\t                         \treturn cache.keys().then(urls =>\n                                                               {\n                                                               \tfor (let i = 0; i <urls.length; ++i)\n                                                                {\n                                                                \tif (urls[i].url ===\n                                                                    `https://jsonplaceholder.typicode.com/posts/${id}`)\n                                                                \t\treturn true;\n                                                                }\n                                                               \treturn false;\n                                                               });\n\t                         }\n\t                  ).catch(error => {console.error(\"Error cached\", error)})\n            },\n\t\t\t// ...mapActions(['posts/fetchPost'])\n\t\t\tfetchPost(id)\n\t\t\t{\n\t\t\t\tthis.send_message_to_sw(this.id);\n\t\t\t\tthis.$store.dispatch('posts/fetchPost', id)\n\t\t\t\t    .then((data) =>\n\t\t\t\t          {\n\t\t\t\t\t          console.log('Fetch ok', data);\n\t\t\t\t          })\n\t\t\t\t    .catch((error) =>\n\t\t\t\t           {\n\t\t\t\t\t           console.error('Fetch error', error);\n\t\t\t\t           });\n\t\t\t},\n\t\t\tsend_message_to_sw(id)\n\t\t\t{\n\t\t\t\tif ('serviceWorker' in navigator)\n\t\t\t\t{\n\t\t\t\t\tnavigator.serviceWorker.ready\n\t\t\t\t\t         .then(function (serviceWorkerRegistration)\n\t\t\t\t\t               {\n\t\t\t\t\t\t               // Let's see if you have a subscription already\n\t\t\t\t\t\t               return serviceWorkerRegistration.pushManager.getSubscription();\n\t\t\t\t\t               })\n\t\t\t\t\t         .then(function (subscription)\n\t\t\t\t\t               {\n\t\t\t\t\t\t               if (! subscription)\n\t\t\t\t\t\t               {\n\t\t\t\t\t\t\t               // You do not have subscription\n\t\t\t\t\t\t               }\n\t\t\t\t\t\t               // You have subscription.\n\t\t\t\t\t\t               // Send data to service worker\n\t\t\t\t\t\t               console.log(\"Sending to SW...\");\n\t\t\t\t\t\t               navigator.serviceWorker.controller.postMessage(\n\t\t\t\t\t\t               {\n\t\t\t\t\t\t\t               \"data\":\n\t\t\t\t\t\t\t               {\n\t\t\t\t\t\t\t\t               \"dev_comm\": true,\n\t\t\t\t\t\t\t\t               \"id\": id\n\t\t\t\t\t\t\t               }\n\t\t\t\t\t\t               });\n\n\t\t\t\t\t               })\n\t\t\t\t}\n\t\t\t},\n\t\t\tdeletePostFromCache()\n\t\t\t{\n\t\t\t\tthis.send_message_to_sw(this.id);\n\t\t\t},\n\t\t\ttoggleCache()\n\t\t\t{\n\t\t\t\t// event.preventDefault();\n                console.log(\"Firing for post: \", this.id);\n\t\t\t\tif (this.cached)\n\t\t\t\t{\n\t\t\t\t\tthis.deletePostFromCache()\n                    // this.cached = false;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tthis.fetchPost(this.id)\n\t\t\t\t\t// this.cached = true;\n\t\t\t\t}\n\t\t\t\tconsole.log(`Post ${this.id}: Cache = ${this.cached}`);\n\t\t\t\t// this.cached = !this.cached;\n\t\t\t}\n\n\t\t},\n\t\tcreated()\n\t\t{\n\t\t\tconst id = this.id;\n\t\t\treturn this.searchCache(id).then(result =>\n                                             {\n                                             \tconsole.log(\"Search from cache: \", result);\n                                             \tif (result != null)\n                                                 \tthis.cached = result;})\n\t\t\t// this.$store.dispatch('posts/fetchPost', this.id);\n\t\t}\n\t}\n</script>\n\n<style scoped>\n\n</style>\n"],"sourceRoot":"src/components"}]}