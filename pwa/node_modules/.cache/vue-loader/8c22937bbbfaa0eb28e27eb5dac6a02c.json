{"remainingRequest":"/Users/ale/Documents/Bachproef/pwa-3/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ale/Documents/Bachproef/pwa-3/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/ale/Documents/Bachproef/pwa-3/src/App.vue","mtime":1556369723180},{"path":"/Users/ale/Documents/Bachproef/pwa-3/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/ale/Documents/Bachproef/pwa-3/node_modules/vuetify-loader/lib/loader.js","mtime":1549812933000},{"path":"/Users/ale/Documents/Bachproef/pwa-3/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ale/Documents/Bachproef/pwa-3/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\timport Product from \"./components/Product\";\n\timport Post from './components/Post'\n\timport {MagentoAPIService} from \"./services/MagentoAPIService\";\n\timport * as firebase from 'firebase/app';\n\timport 'firebase/messaging';\n\timport * as localForage from \"localforage\";\n\n\texport default {\n\t\tname: 'App',\n\t\tcomponents: {\n\t\t\tProduct,\n\t\t\tPost\n\t\t},\n\t\tdata()\n\t\t{\n\t\t\treturn {\n\t\t\t\tfirebase:\n\t\t\t\t{\n\t\t\t\t\tconfig: {\n\t\t\t\t\t\tapiKey: \"AIzaSyAyGInviSJMCyZV_XHLIRa8fKAt-wsaAJA\",\n\t\t\t\t\t\tauthDomain: \"pwademo-763.firebaseapp.com\",\n\t\t\t\t\t\tdatabaseURL: \"https://pwademo-763.firebaseio.com\",\n\t\t\t\t\t\tprojectId: \"pwademo-763\",\n\t\t\t\t\t\tstorageBucket: \"pwademo-763.appspot.com\",\n\t\t\t\t\t\tmessagingSenderId: \"857384407396\"\n\t\t\t\t\t},\n\t\t\t\t\tmessaging: null,\n\t\t\t\t\ttoken: null,\n\t\t\t\t},\n                service_worker:\n                {\n                \trefreshing: false,\n                    reloadRequested: false\n                },\n                lf: null,\n\t\t\t\tnewWorker: null,\n\t\t\t\tdrawer: '',\n\t\t\t\titems: [\n\t\t\t\t\t{title: 'Home', icon: 'dashboard', link: '/'},\n\t\t\t\t\t{title: 'About', icon: 'question_answer', link: '/about'},\n\t\t\t\t\t{title: 'Products', icon: 'question_answer', link: '/products'},\n\t\t\t\t\t{title: 'Update', icon: 'question_answer', link: '/update'},\n\t\t\t\t\t{title: 'Bare Update', icon: 'question_answer', link: '/update-without-skip-and-claim'},\n\t\t\t\t\t{title: 'Update with skip', icon: 'question_answer', link: '/update-with-skip-no-claim'},\n\t\t\t\t\t{title: 'Update with skip & claim', icon: 'question_answer', link: '/update-with-skip-and-claim'},\n\t\t\t\t]\n\t\t\t}\n\t\t},\n\t\tcomputed:\n\t\t{\n\t\t\tposts: function ()\n\t\t\t{\n\t\t\t\tlet posts = this.$store.getters['posts/allPosts'];\n\t\t\t\t// console.log(\"All Posts: \", posts);\n\t\t\t\treturn posts;\n\t\t\t},\n\t\t\tproducts: function ()\n\t\t\t{\n\t\t\t\tlet products = this.$store.getters['products/allProducts'];\n\t\t\t\t// console.log(\"All Posts: \", posts);\n\t\t\t\treturn products;\n\t\t\t}\n\t\t},\n\t\tcreated()\n\t\t{\n\t\t\tlocalForage.config({\n\t\t\t\t                   name        : 'Alessio',\n\t\t\t\t                   version     : 1.0,\n\t\t\t\t                   size        : 4980736, // Size of database, in bytes. WebSQL-only for now.\n\t\t\t\t                   storeName   : 'lf', // Should be alphanumeric, with underscores.\n\t\t\t\t                   description : 'some description'\n\t\t\t                   });\n\t\t\tthis.lf = localForage.createInstance({name: \"lf\"});\n\t\t\tthis.sw();\n\t\t\tthis.firebaseNotificationsHandler();\n\n\t\t},\n\t\tmethods:\n\t\t{\n\t\t\t_firebaseInit()\n\t\t\t{\n\t\t\t\tfirebase.initializeApp(this.firebase.config);\n\t\t\t\tthis.firebase.messaging = firebase.messaging();\n\t\t\t\tthis.firebase.messaging.usePublicVapidKey(\"BHEX_KV05JO3refzgJbNXaXObnSiCb2kjx1rOsLWhMon4dea2ddfiYD0iLBHm6DsQkVp8sCLr2Ypuuz6haDnOzo\");\n\t\t\t},\n\t\t\t_firebaseGetToken()\n\t\t\t{\n\t\t\t\tconst THIS = this;\n\t\t\t\tTHIS.firebase.messaging\n\t\t\t\t    .getToken()\n\t\t\t\t    .then(function (currentToken)\n\t\t\t\t          {\n\t\t\t\t\t          if (currentToken)\n\t\t\t\t\t          {\n\t\t\t\t\t\t          THIS.firebase.token = currentToken;\n\t\t\t\t\t\t          console.log(\"TOKEN: \", currentToken);\n\t\t\t\t\t          } else\n\t\t\t\t\t          {\n\t\t\t\t\t\t          console.log('No Instance ID token available. Request permission to generate one.');\n\t\t\t\t\t          }\n\t\t\t\t          })\n\t\t\t\t    .catch(function (err)\n\t\t\t\t           {\n\t\t\t\t\t           console.log('An error occurred while retrieving token. ', err);\n\t\t\t\t\t           // setTokenSentToServer(false);\n\t\t\t\t           });\n\n\t\t\t},\n\t\t\t_firebaseRequestPermission()\n\t\t\t{\n\t\t\t\tthis.firebase.messaging\n\t\t\t\t    .requestPermission()\n\t\t\t\t    .then(() =>\n\t\t\t\t          {\n\t\t\t\t\t          console.log('Notification permission granted.');\n\t\t\t\t\t          this._firebaseGetToken()\n\n\t\t\t\t          })\n\t\t\t\t    .catch((err) =>\n\t\t\t\t           {\n\t\t\t\t\t           console.log('Unable to get permission to notify.', err);\n\t\t\t\t           });\n\t\t\t},\n\t\t\tfirebaseNotificationsHandler()\n\t\t\t{\n\t\t\t\tconst THIS = this;\n\t\t\t\tthis._firebaseInit();\n\t\t\t\tthis._firebaseRequestPermission();\n\n\t\t\t\t// -----------------------------------------------------------------------------------------------------\n\t\t\t\t// Event listeners\n\n\t\t\t\tTHIS.firebase.messaging\n\t\t\t\t    .onTokenRefresh(\n\t\t\t\t    () =>\n\t\t\t\t    {\n\t\t\t\t\t    this._firebaseGetToken();\n\t\t\t\t\t    console.log(\"TOKEN REFRESHED: \", THIS.firebase.token)\n\t\t\t\t    });\n\n\t\t\t\tTHIS.firebase.messaging\n\t\t\t\t    .onMessage(\n\t\t\t\t    (payload) =>\n\t\t\t\t    {\n\t\t\t\t\t    console.log('Message received. ', payload);\n\t\t\t\t\t    if (Notification.permission === 'granted')\n\t\t\t\t\t    {\n\t\t\t\t\t\t    const notification = new Notification(payload.notification.title, {\n\t\t\t\t\t\t\t    icon: payload.notification.icon,\n\t\t\t\t\t\t\t    body: payload.notification.body,\n\t\t\t\t\t\t    });\n\t\t\t\t\t\t    notification.onclick = function ()\n\t\t\t\t\t\t    {\n\t\t\t\t\t\t\t    console.log(\"NOTIFCATION CLICK\");\n\t\t\t\t\t\t\t    window.open(payload.notification.click_action,\n\t\t\t\t\t\t\t                \"_blank\");\n\t\t\t\t\t\t    };\n\t\t\t\t\t\t    return notification;\n\t\t\t\t\t    }\n\t\t\t\t    });\n\t\t\t},\n\t\t\tsend_message_to_sw(msg)\n\t\t\t{\n\t\t\t\tif ('serviceWorker' in navigator)\n\t\t\t\t{\n\t\t\t\t\tnavigator\n\t\t\t\t\t.serviceWorker.ready\n\t\t\t\t\t.then(function (serviceWorkerRegistration)\n\t\t\t\t\t      {\n\t\t\t\t\t\t      // Let's see if you have a subscription already\n\t\t\t\t\t\t      return serviceWorkerRegistration.pushManager.getSubscription();\n\t\t\t\t\t      })\n\t\t\t\t\t.then(function (subscription)\n\t\t\t\t\t      {\n\t\t\t\t\t\t      if (!subscription)\n\t\t\t\t\t\t      {\n\t\t\t\t\t\t\t      // You do not have subscription\n\t\t\t\t\t\t      }\n\t\t\t\t\t\t      // You have subscription.\n\t\t\t\t\t\t      // Send data to service worker\n\t\t\t\t\t\t      console.log(\"Sending to SW...\");\n\t\t\t\t\t\t      navigator.serviceWorker.controller.postMessage(\n\t\t\t\t\t\t      {\n\t\t\t\t\t\t\t      \"data\":\n\t\t\t\t\t\t\t      {\n\t\t\t\t\t\t\t\t      \"dev_comm\": true,\n\t\t\t\t\t\t\t\t      \"id\": 1\n\t\t\t\t\t\t\t      }\n\t\t\t\t\t\t      });\n\n\t\t\t\t\t      })\n\t\t\t\t}\n\t\t\t},\n\t\t\trequest_from_sw()\n            {\n\t            let request = new Request(\"https://localhost:8080/sw.js\");\n\t            const requestOptions = { method: 'GET'};\n\t            return fetch(request, requestOptions)\n\t            .then((response) =>\n\t                  {\n\t\t                  return {\n\t\t\t                  request: request,\n\t\t\t                  response: response\n\t\t                  };\n\t                  })\n\t            .catch(error =>\n\t                   {\n\t\t                   console.error(error);\n\t\t                   console.error(JSON.stringify(error));\n\t\t                   return {\n\t\t\t                   request: request,\n\t\t\t                   response: response\n\t\t                   };\n\t                   });\n            },\n\t\t\tsend_new_sw()\n\t\t\t{\n\t\t\t\tif(this.newWorker)\n    \t\t\t\tthis.newWorker.postMessage({action: 'skipWaiting'});\n\t\t\t},\n\t\t\tsw()\n\t\t\t{\n\t\t\t\twindow.addEventListener(\n\t\t\t\t'load',\n\t\t\t\tasync () =>\n\t\t\t\t{\n\t\t\t\t\tnavigator\n\t\t\t\t\t.serviceWorker\n\t\t\t\t\t.register('/sw.js', {scope: '/'})\n\t\t\t\t\t.then(\n\t\t\t\t\t(registration) =>\n\t\t\t\t\t{\n\t\t\t\t\t\t// Registration was successful\n\t\t\t\t\t\tconsole.log('SW GLOBAL OK: ', registration.scope);\n\n\t\t\t\t\t}, (err) =>\n\t\t\t\t\t{\n\t\t\t\t\t\t// registration failed :(\n\t\t\t\t\t\tconsole.log('SW registration failed: ', err);\n\t\t\t\t\t})\n\t\t\t\t\t.then(() =>\n\t\t\t\t\t      {\n\t\t\t\t\t      \tconsole.log(\"SW GLOBAL READY\");\n\t\t\t\t\t\t      return navigator.serviceWorker.ready;\n\t\t\t\t\t      });\n\n\t\t\t\t\t// Source: https://stackoverflow.com/questions/37573482/to-check-if-serviceworker-is-in-waiting-state\n\t\t\t\t\tconst registration = await navigator.serviceWorker.register('/sw.js');\n\t\t\t\t\tif(registration.waiting && registration.active)\n                    {\n                        this.newWorker = registration.waiting;\n                    }\n\t\t\t\t\telse\n                    {\n\t                    registration.addEventListener(\n\t                    'updatefound',\n\t                    () =>\n\t                    {\n\t\t                    this.newWorker = registration.installing;\n\n\t\t                    this.newWorker\n\t\t                        .addEventListener(\n\t\t                        'statechange',\n\t\t                        () =>\n\t\t                        {\n\t\t\t                        // Has service worker state changed?\n\t\t\t                        switch (this.newWorker.state)\n\t\t\t                        {\n\t\t\t\t                        case 'installed':\n\n\t\t\t\t\t                        // There is a new service worker available, show the\n\t\t\t\t\t                        // notification\n\t\t\t\t\t                        if (navigator.serviceWorker.controller)\n\t\t\t\t\t                        {\n\t\t\t\t\t\t                        console.log(\"NEW SW AVAILABLE\");\n\t\t\t\t\t                        }\n\t\t\t\t\t                        break;\n\t\t\t                        }\n\t\t                        });\n\t                    });\n                    }\n\t\t\t\t\t// this.lf.setItem(\"newWorker\", this.newWorker);\n\n\n\n\t\t\t\t\tconst THIS = this;\n\t\t\t\t\tnavigator.serviceWorker.addEventListener('controllerchange', function ()\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log(\"SW CONTROLLERCHANGE \");\n\t\t\t\t\t\tif (!THIS.service_worker.refreshing && THIS.service_worker.reloadRequested)\n                        {\n\t                        window.location.reload();\n\t                        THIS.service_worker.refreshing = true;\n\n                        }\n\t\t\t\t\t\telse\n                        {\n\t                        THIS.service_worker.refreshing = false;\n\t                        THIS.service_worker.reloadRequested = false;\n\t                        return\n                        }\n\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t}\n\t\t}\n\t}\n\n",{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmfile":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n    <v-app>\n        <v-toolbar app>\n            <v-toolbar-side-icon @click.stop=\"drawer = !drawer\"></v-toolbar-side-icon>\n            <v-toolbar-title class=\"black--text\">PWA Demo</v-toolbar-title>\n            <v-btn icon\n                   @click=\"requestPermission()\">\n                <v-icon>notifications</v-icon>\n            </v-btn>\n            <v-spacer></v-spacer>\n            <v-text-field hide-details\n                          prepend-icon=\"search\"\n                          single-line></v-text-field>\n            <v-btn icon>\n                <v-icon>favorite</v-icon>\n            </v-btn>\n            <v-btn icon>\n                <v-icon>shopping_cart</v-icon>\n            </v-btn>\n            <v-btn icon>\n                <v-icon>person</v-icon>\n            </v-btn>\n        </v-toolbar>\n\n        <v-content>\n            <v-navigation-drawer v-model=\"drawer\"\n                                 absolute\n                                 temporary>\n                <v-list class=\"pa-1\">\n                    <v-list-tile avatar>\n                        <v-list-tile-avatar>\n                            <img src=\"https://randomuser.me/api/portraits/men/85.jpg\">\n                        </v-list-tile-avatar>\n\n                        <v-list-tile-content>\n                            <v-list-tile-title>John Leider</v-list-tile-title>\n                        </v-list-tile-content>\n                    </v-list-tile>\n                </v-list>\n\n                <v-list class=\"pt-0\"\n                        dense>\n                    <v-divider></v-divider>\n\n                    <v-list-tile v-for=\"item in items\"\n                                 :key=\"item.title\"\n                                 :to=\"item.link\"\n                                 @click=\"\">\n                        <v-list-tile-action>\n                            <v-icon>{{ item.icon }}</v-icon>\n                        </v-list-tile-action>\n\n                        <v-list-tile-content>\n                            <v-list-tile-title>{{ item.title }}</v-list-tile-title>\n                        </v-list-tile-content>\n                    </v-list-tile>\n                </v-list>\n            </v-navigation-drawer>\n            <router-view/>\n            <a style=\"position:absolute; top: 5px; right: 10px;\" v-on:click=\"send_new_sw()\">UPDATE SW</a>\n            <a style=\"position:absolute; top: 20px; right: 10px;\" v-on:click=\"request_from_sw()\">REQUEST</a>\n            <img src=\"/img/horse.jpg\" style=\"max-height: 500px; max-width: 500px;\">\n        </v-content>\n    </v-app>\n</template>\n\n<script>\n\timport Product from \"./components/Product\";\n\timport Post from './components/Post'\n\timport {MagentoAPIService} from \"./services/MagentoAPIService\";\n\timport * as firebase from 'firebase/app';\n\timport 'firebase/messaging';\n\timport * as localForage from \"localforage\";\n\n\texport default {\n\t\tname: 'App',\n\t\tcomponents: {\n\t\t\tProduct,\n\t\t\tPost\n\t\t},\n\t\tdata()\n\t\t{\n\t\t\treturn {\n\t\t\t\tfirebase:\n\t\t\t\t{\n\t\t\t\t\tconfig: {\n\t\t\t\t\t\tapiKey: \"AIzaSyAyGInviSJMCyZV_XHLIRa8fKAt-wsaAJA\",\n\t\t\t\t\t\tauthDomain: \"pwademo-763.firebaseapp.com\",\n\t\t\t\t\t\tdatabaseURL: \"https://pwademo-763.firebaseio.com\",\n\t\t\t\t\t\tprojectId: \"pwademo-763\",\n\t\t\t\t\t\tstorageBucket: \"pwademo-763.appspot.com\",\n\t\t\t\t\t\tmessagingSenderId: \"857384407396\"\n\t\t\t\t\t},\n\t\t\t\t\tmessaging: null,\n\t\t\t\t\ttoken: null,\n\t\t\t\t},\n                service_worker:\n                {\n                \trefreshing: false,\n                    reloadRequested: false\n                },\n                lf: null,\n\t\t\t\tnewWorker: null,\n\t\t\t\tdrawer: '',\n\t\t\t\titems: [\n\t\t\t\t\t{title: 'Home', icon: 'dashboard', link: '/'},\n\t\t\t\t\t{title: 'About', icon: 'question_answer', link: '/about'},\n\t\t\t\t\t{title: 'Products', icon: 'question_answer', link: '/products'},\n\t\t\t\t\t{title: 'Update', icon: 'question_answer', link: '/update'},\n\t\t\t\t\t{title: 'Bare Update', icon: 'question_answer', link: '/update-without-skip-and-claim'},\n\t\t\t\t\t{title: 'Update with skip', icon: 'question_answer', link: '/update-with-skip-no-claim'},\n\t\t\t\t\t{title: 'Update with skip & claim', icon: 'question_answer', link: '/update-with-skip-and-claim'},\n\t\t\t\t]\n\t\t\t}\n\t\t},\n\t\tcomputed:\n\t\t{\n\t\t\tposts: function ()\n\t\t\t{\n\t\t\t\tlet posts = this.$store.getters['posts/allPosts'];\n\t\t\t\t// console.log(\"All Posts: \", posts);\n\t\t\t\treturn posts;\n\t\t\t},\n\t\t\tproducts: function ()\n\t\t\t{\n\t\t\t\tlet products = this.$store.getters['products/allProducts'];\n\t\t\t\t// console.log(\"All Posts: \", posts);\n\t\t\t\treturn products;\n\t\t\t}\n\t\t},\n\t\tcreated()\n\t\t{\n\t\t\tlocalForage.config({\n\t\t\t\t                   name        : 'Alessio',\n\t\t\t\t                   version     : 1.0,\n\t\t\t\t                   size        : 4980736, // Size of database, in bytes. WebSQL-only for now.\n\t\t\t\t                   storeName   : 'lf', // Should be alphanumeric, with underscores.\n\t\t\t\t                   description : 'some description'\n\t\t\t                   });\n\t\t\tthis.lf = localForage.createInstance({name: \"lf\"});\n\t\t\tthis.sw();\n\t\t\tthis.firebaseNotificationsHandler();\n\n\t\t},\n\t\tmethods:\n\t\t{\n\t\t\t_firebaseInit()\n\t\t\t{\n\t\t\t\tfirebase.initializeApp(this.firebase.config);\n\t\t\t\tthis.firebase.messaging = firebase.messaging();\n\t\t\t\tthis.firebase.messaging.usePublicVapidKey(\"BHEX_KV05JO3refzgJbNXaXObnSiCb2kjx1rOsLWhMon4dea2ddfiYD0iLBHm6DsQkVp8sCLr2Ypuuz6haDnOzo\");\n\t\t\t},\n\t\t\t_firebaseGetToken()\n\t\t\t{\n\t\t\t\tconst THIS = this;\n\t\t\t\tTHIS.firebase.messaging\n\t\t\t\t    .getToken()\n\t\t\t\t    .then(function (currentToken)\n\t\t\t\t          {\n\t\t\t\t\t          if (currentToken)\n\t\t\t\t\t          {\n\t\t\t\t\t\t          THIS.firebase.token = currentToken;\n\t\t\t\t\t\t          console.log(\"TOKEN: \", currentToken);\n\t\t\t\t\t          } else\n\t\t\t\t\t          {\n\t\t\t\t\t\t          console.log('No Instance ID token available. Request permission to generate one.');\n\t\t\t\t\t          }\n\t\t\t\t          })\n\t\t\t\t    .catch(function (err)\n\t\t\t\t           {\n\t\t\t\t\t           console.log('An error occurred while retrieving token. ', err);\n\t\t\t\t\t           // setTokenSentToServer(false);\n\t\t\t\t           });\n\n\t\t\t},\n\t\t\t_firebaseRequestPermission()\n\t\t\t{\n\t\t\t\tthis.firebase.messaging\n\t\t\t\t    .requestPermission()\n\t\t\t\t    .then(() =>\n\t\t\t\t          {\n\t\t\t\t\t          console.log('Notification permission granted.');\n\t\t\t\t\t          this._firebaseGetToken()\n\n\t\t\t\t          })\n\t\t\t\t    .catch((err) =>\n\t\t\t\t           {\n\t\t\t\t\t           console.log('Unable to get permission to notify.', err);\n\t\t\t\t           });\n\t\t\t},\n\t\t\tfirebaseNotificationsHandler()\n\t\t\t{\n\t\t\t\tconst THIS = this;\n\t\t\t\tthis._firebaseInit();\n\t\t\t\tthis._firebaseRequestPermission();\n\n\t\t\t\t// -----------------------------------------------------------------------------------------------------\n\t\t\t\t// Event listeners\n\n\t\t\t\tTHIS.firebase.messaging\n\t\t\t\t    .onTokenRefresh(\n\t\t\t\t    () =>\n\t\t\t\t    {\n\t\t\t\t\t    this._firebaseGetToken();\n\t\t\t\t\t    console.log(\"TOKEN REFRESHED: \", THIS.firebase.token)\n\t\t\t\t    });\n\n\t\t\t\tTHIS.firebase.messaging\n\t\t\t\t    .onMessage(\n\t\t\t\t    (payload) =>\n\t\t\t\t    {\n\t\t\t\t\t    console.log('Message received. ', payload);\n\t\t\t\t\t    if (Notification.permission === 'granted')\n\t\t\t\t\t    {\n\t\t\t\t\t\t    const notification = new Notification(payload.notification.title, {\n\t\t\t\t\t\t\t    icon: payload.notification.icon,\n\t\t\t\t\t\t\t    body: payload.notification.body,\n\t\t\t\t\t\t    });\n\t\t\t\t\t\t    notification.onclick = function ()\n\t\t\t\t\t\t    {\n\t\t\t\t\t\t\t    console.log(\"NOTIFCATION CLICK\");\n\t\t\t\t\t\t\t    window.open(payload.notification.click_action,\n\t\t\t\t\t\t\t                \"_blank\");\n\t\t\t\t\t\t    };\n\t\t\t\t\t\t    return notification;\n\t\t\t\t\t    }\n\t\t\t\t    });\n\t\t\t},\n\t\t\tsend_message_to_sw(msg)\n\t\t\t{\n\t\t\t\tif ('serviceWorker' in navigator)\n\t\t\t\t{\n\t\t\t\t\tnavigator\n\t\t\t\t\t.serviceWorker.ready\n\t\t\t\t\t.then(function (serviceWorkerRegistration)\n\t\t\t\t\t      {\n\t\t\t\t\t\t      // Let's see if you have a subscription already\n\t\t\t\t\t\t      return serviceWorkerRegistration.pushManager.getSubscription();\n\t\t\t\t\t      })\n\t\t\t\t\t.then(function (subscription)\n\t\t\t\t\t      {\n\t\t\t\t\t\t      if (!subscription)\n\t\t\t\t\t\t      {\n\t\t\t\t\t\t\t      // You do not have subscription\n\t\t\t\t\t\t      }\n\t\t\t\t\t\t      // You have subscription.\n\t\t\t\t\t\t      // Send data to service worker\n\t\t\t\t\t\t      console.log(\"Sending to SW...\");\n\t\t\t\t\t\t      navigator.serviceWorker.controller.postMessage(\n\t\t\t\t\t\t      {\n\t\t\t\t\t\t\t      \"data\":\n\t\t\t\t\t\t\t      {\n\t\t\t\t\t\t\t\t      \"dev_comm\": true,\n\t\t\t\t\t\t\t\t      \"id\": 1\n\t\t\t\t\t\t\t      }\n\t\t\t\t\t\t      });\n\n\t\t\t\t\t      })\n\t\t\t\t}\n\t\t\t},\n\t\t\trequest_from_sw()\n            {\n\t            let request = new Request(\"https://localhost:8080/sw.js\");\n\t            const requestOptions = { method: 'GET'};\n\t            return fetch(request, requestOptions)\n\t            .then((response) =>\n\t                  {\n\t\t                  return {\n\t\t\t                  request: request,\n\t\t\t                  response: response\n\t\t                  };\n\t                  })\n\t            .catch(error =>\n\t                   {\n\t\t                   console.error(error);\n\t\t                   console.error(JSON.stringify(error));\n\t\t                   return {\n\t\t\t                   request: request,\n\t\t\t                   response: response\n\t\t                   };\n\t                   });\n            },\n\t\t\tsend_new_sw()\n\t\t\t{\n\t\t\t\tif(this.newWorker)\n    \t\t\t\tthis.newWorker.postMessage({action: 'skipWaiting'});\n\t\t\t},\n\t\t\tsw()\n\t\t\t{\n\t\t\t\twindow.addEventListener(\n\t\t\t\t'load',\n\t\t\t\tasync () =>\n\t\t\t\t{\n\t\t\t\t\tnavigator\n\t\t\t\t\t.serviceWorker\n\t\t\t\t\t.register('/sw.js', {scope: '/'})\n\t\t\t\t\t.then(\n\t\t\t\t\t(registration) =>\n\t\t\t\t\t{\n\t\t\t\t\t\t// Registration was successful\n\t\t\t\t\t\tconsole.log('SW GLOBAL OK: ', registration.scope);\n\n\t\t\t\t\t}, (err) =>\n\t\t\t\t\t{\n\t\t\t\t\t\t// registration failed :(\n\t\t\t\t\t\tconsole.log('SW registration failed: ', err);\n\t\t\t\t\t})\n\t\t\t\t\t.then(() =>\n\t\t\t\t\t      {\n\t\t\t\t\t      \tconsole.log(\"SW GLOBAL READY\");\n\t\t\t\t\t\t      return navigator.serviceWorker.ready;\n\t\t\t\t\t      });\n\n\t\t\t\t\t// Source: https://stackoverflow.com/questions/37573482/to-check-if-serviceworker-is-in-waiting-state\n\t\t\t\t\tconst registration = await navigator.serviceWorker.register('/sw.js');\n\t\t\t\t\tif(registration.waiting && registration.active)\n                    {\n                        this.newWorker = registration.waiting;\n                    }\n\t\t\t\t\telse\n                    {\n\t                    registration.addEventListener(\n\t                    'updatefound',\n\t                    () =>\n\t                    {\n\t\t                    this.newWorker = registration.installing;\n\n\t\t                    this.newWorker\n\t\t                        .addEventListener(\n\t\t                        'statechange',\n\t\t                        () =>\n\t\t                        {\n\t\t\t                        // Has service worker state changed?\n\t\t\t                        switch (this.newWorker.state)\n\t\t\t                        {\n\t\t\t\t                        case 'installed':\n\n\t\t\t\t\t                        // There is a new service worker available, show the\n\t\t\t\t\t                        // notification\n\t\t\t\t\t                        if (navigator.serviceWorker.controller)\n\t\t\t\t\t                        {\n\t\t\t\t\t\t                        console.log(\"NEW SW AVAILABLE\");\n\t\t\t\t\t                        }\n\t\t\t\t\t                        break;\n\t\t\t                        }\n\t\t                        });\n\t                    });\n                    }\n\t\t\t\t\t// this.lf.setItem(\"newWorker\", this.newWorker);\n\n\n\n\t\t\t\t\tconst THIS = this;\n\t\t\t\t\tnavigator.serviceWorker.addEventListener('controllerchange', function ()\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log(\"SW CONTROLLERCHANGE \");\n\t\t\t\t\t\tif (!THIS.service_worker.refreshing && THIS.service_worker.reloadRequested)\n                        {\n\t                        window.location.reload();\n\t                        THIS.service_worker.refreshing = true;\n\n                        }\n\t\t\t\t\t\telse\n                        {\n\t                        THIS.service_worker.refreshing = false;\n\t                        THIS.service_worker.reloadRequested = false;\n\t                        return\n                        }\n\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t}\n\t\t}\n\t}\n\n</script>\n"]}]}