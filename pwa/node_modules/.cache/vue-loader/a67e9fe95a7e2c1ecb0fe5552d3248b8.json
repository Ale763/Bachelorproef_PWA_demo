{"remainingRequest":"/Users/ale/Documents/Bachproef/pwa-3/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ale/Documents/Bachproef/pwa-3/src/views/Home.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/ale/Documents/Bachproef/pwa-3/src/views/Home.vue","mtime":1560350276733},{"path":"/Users/ale/Documents/Bachproef/pwa-3/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ale/Documents/Bachproef/pwa-3/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/ale/Documents/Bachproef/pwa-3/node_modules/vuetify-loader/lib/loader.js","mtime":1549812933000},{"path":"/Users/ale/Documents/Bachproef/pwa-3/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ale/Documents/Bachproef/pwa-3/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport localForage from \"localforage\";\nexport default\n{\n    name: 'Home',\n    data()\n    {\n        return {\n            strategy: \"none\",\n            usergroup: \"none\",\n            flag: false,\n            sw: null,\n            registration: null\n        }\n    },\n    computed:\n    {\n\n    },\n    async created()\n    {\n        window.addEventListener(\"change\", (event) =>\n        {\n            console.log(\"productCachePolicy: \", event);\n        });\n\n        window.addEventListener('load', async () =>\n        {\n            this.registration = await navigator.serviceWorker.register(\"/sw.js\")\n                .then(reg =>\n                {\n                    this.flag = true;\n                    this.sw = reg.active;\n                    return reg;\n                })\n                .catch((error) => console.error(`registration failed: `, error));\n        });\n\n    },\n    methods:\n    {\n        async setStrategy()\n        {\n            this.registration.active.postMessage(\n            {\n                action: 'updateProductCachePolicy',\n                policy: this.strategy\n            });\n        },\n        async setUserCookie()\n        {\n            if (this.usergroup === '1' ||  this.usergroup === '2')\n            {\n                this._setCookie(\"User\", this.usergroup);\n            }\n            else\n            {\n                this._deteleCookie(\"User\");\n            }\n\n            this.registration.active.postMessage(\n            {\n                action: 'setCookies',\n                policy: this.usergroup\n            });\n        },\n        async getStrategy()\n        {\n            let response = await fetch(\"/sw/productCachePolicy\").catch(err =>\n            {\n                return null;\n            });\n            let productCachePolicy = \"none\";\n            if (response != null)\n                productCachePolicy = await response.json().then(data =>\n                {\n                    return data.policy;\n                }).catch(err =>\n                {\n                    return \"none\";\n                });\n            this.strategy = productCachePolicy;\n\n        },\n        async _getStrategy()\n        {\n            if (this.registration.active)\n            {\n                let response = await fetch(\"/sw/productCachePolicy\").catch(err =>\n                {\n                    return null;\n                });\n                let productCachePolicy = \"none\";\n                if (response != null)\n                    productCachePolicy = await response.json().then(data =>\n                    {\n                        return data.policy;\n                    }).catch(err =>\n                    {\n                        return \"none\";\n                    });\n                return productCachePolicy;\n            }\n            return \"none\";\n        },\n        _setCookie(key, value)\n        {\n            let parsedCookies = this._parseDocumentCookies();\n            parsedCookies = this._setValueOnParsedCookies(parsedCookies, key, value);\n            let stringifiedCookies = this._stringifyParsedCookies(parsedCookies);\n            document.cookie = `${key}=${value}`;\n\n            if (this.registration.active)\n            {\n                this.registration.active.postMessage(\n                {\n                    action: 'setCookies',\n                    cookies: parsedCookies\n                });\n            }\n        },\n        _deteleCookie(key)\n        {\n            document.cookie = `${key}= ; expires = Thu, 01 Jan 1970 00:00:00 GMT`\n        },\n        _parseDocumentCookies()\n        {\n            let docCookies = document.cookie;\n            if (docCookies === \"\")\n                return []\n            docCookies = document.cookie.split(';');\n            let parsedCookies = [];\n            for (let docCookie of docCookies)\n            {\n                let parsedCookie = docCookie.split('=');\n                parsedCookies.push(parsedCookie);\n            }\n            return parsedCookies;\n        },\n        _setValueOnParsedCookies(parsedCookies, key, value)\n        {\n            let valueSet = false;\n            for (let i = 0; i < parsedCookies.length; ++i)\n            {\n                if (parsedCookies[i][0] === key)\n                {\n                    parsedCookies[i][1] = value\n                    valueSet = true;\n                }\n            }\n            if (!valueSet)\n                parsedCookies.push([key, value]);\n            return parsedCookies;\n        },\n        _stringifyParsedCookies(parsedCookies)\n        {\n            let stringifiedCookies = \"\";\n            for (let cookie of parsedCookies)\n            {\n                stringifiedCookies += `${cookie[0]}=${cookie[1]};`;\n            }\n            return stringifiedCookies;\n        },\n    }\n}\n",{"version":3,"sources":["Home.vue"],"names":[],"mappings":";;;;;;;;;;;;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Home.vue","sourceRoot":"src/views","sourcesContent":["<template>\n<div class=\"home\">\n    <!-- <h1>HOME</h1> -->\n<!--     <img alt=\"Vue logo\" src=\"../assets/nf.svg\">\n    <img alt=\"Vue logo\" src=\"../assets/no.svg\">\n    <img alt=\"Vue logo\" src=\"../assets/cf.svg\">\n    <img alt=\"Vue logo\" src=\"../assets/co.svg\">\n    <img alt=\"Vue logo\" src=\"../assets/swr.svg\"> -->\n</div>\n</template>\n\n<script>\nimport localForage from \"localforage\";\nexport default\n{\n    name: 'Home',\n    data()\n    {\n        return {\n            strategy: \"none\",\n            usergroup: \"none\",\n            flag: false,\n            sw: null,\n            registration: null\n        }\n    },\n    computed:\n    {\n\n    },\n    async created()\n    {\n        window.addEventListener(\"change\", (event) =>\n        {\n            console.log(\"productCachePolicy: \", event);\n        });\n\n        window.addEventListener('load', async () =>\n        {\n            this.registration = await navigator.serviceWorker.register(\"/sw.js\")\n                .then(reg =>\n                {\n                    this.flag = true;\n                    this.sw = reg.active;\n                    return reg;\n                })\n                .catch((error) => console.error(`registration failed: `, error));\n        });\n\n    },\n    methods:\n    {\n        async setStrategy()\n        {\n            this.registration.active.postMessage(\n            {\n                action: 'updateProductCachePolicy',\n                policy: this.strategy\n            });\n        },\n        async setUserCookie()\n        {\n            if (this.usergroup === '1' ||  this.usergroup === '2')\n            {\n                this._setCookie(\"User\", this.usergroup);\n            }\n            else\n            {\n                this._deteleCookie(\"User\");\n            }\n\n            this.registration.active.postMessage(\n            {\n                action: 'setCookies',\n                policy: this.usergroup\n            });\n        },\n        async getStrategy()\n        {\n            let response = await fetch(\"/sw/productCachePolicy\").catch(err =>\n            {\n                return null;\n            });\n            let productCachePolicy = \"none\";\n            if (response != null)\n                productCachePolicy = await response.json().then(data =>\n                {\n                    return data.policy;\n                }).catch(err =>\n                {\n                    return \"none\";\n                });\n            this.strategy = productCachePolicy;\n\n        },\n        async _getStrategy()\n        {\n            if (this.registration.active)\n            {\n                let response = await fetch(\"/sw/productCachePolicy\").catch(err =>\n                {\n                    return null;\n                });\n                let productCachePolicy = \"none\";\n                if (response != null)\n                    productCachePolicy = await response.json().then(data =>\n                    {\n                        return data.policy;\n                    }).catch(err =>\n                    {\n                        return \"none\";\n                    });\n                return productCachePolicy;\n            }\n            return \"none\";\n        },\n        _setCookie(key, value)\n        {\n            let parsedCookies = this._parseDocumentCookies();\n            parsedCookies = this._setValueOnParsedCookies(parsedCookies, key, value);\n            let stringifiedCookies = this._stringifyParsedCookies(parsedCookies);\n            document.cookie = `${key}=${value}`;\n\n            if (this.registration.active)\n            {\n                this.registration.active.postMessage(\n                {\n                    action: 'setCookies',\n                    cookies: parsedCookies\n                });\n            }\n        },\n        _deteleCookie(key)\n        {\n            document.cookie = `${key}= ; expires = Thu, 01 Jan 1970 00:00:00 GMT`\n        },\n        _parseDocumentCookies()\n        {\n            let docCookies = document.cookie;\n            if (docCookies === \"\")\n                return []\n            docCookies = document.cookie.split(';');\n            let parsedCookies = [];\n            for (let docCookie of docCookies)\n            {\n                let parsedCookie = docCookie.split('=');\n                parsedCookies.push(parsedCookie);\n            }\n            return parsedCookies;\n        },\n        _setValueOnParsedCookies(parsedCookies, key, value)\n        {\n            let valueSet = false;\n            for (let i = 0; i < parsedCookies.length; ++i)\n            {\n                if (parsedCookies[i][0] === key)\n                {\n                    parsedCookies[i][1] = value\n                    valueSet = true;\n                }\n            }\n            if (!valueSet)\n                parsedCookies.push([key, value]);\n            return parsedCookies;\n        },\n        _stringifyParsedCookies(parsedCookies)\n        {\n            let stringifiedCookies = \"\";\n            for (let cookie of parsedCookies)\n            {\n                stringifiedCookies += `${cookie[0]}=${cookie[1]};`;\n            }\n            return stringifiedCookies;\n        },\n    }\n}\n</script>\n"]}]}