{"remainingRequest":"/Users/ale/Documents/Bachproef/pwa-3/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ale/Documents/Bachproef/pwa-3/src/components/Post.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/ale/Documents/Bachproef/pwa-3/src/components/Post.vue","mtime":1556168882118},{"path":"/Users/ale/Documents/Bachproef/pwa-3/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/ale/Documents/Bachproef/pwa-3/node_modules/vuetify-loader/lib/loader.js","mtime":1549812933000},{"path":"/Users/ale/Documents/Bachproef/pwa-3/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ale/Documents/Bachproef/pwa-3/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\timport {mapGetters, mapActions} from 'vuex';\n\n\texport default {\n\t\tname: \"Post\",\n\t\tprops:\n\t\t{\n\t\t\tid: Number\n\t\t},\n\t\tdata: function ()\n\t\t{\n\t\t\treturn {\n\t\t\t\tcached: false\n\t\t\t}\n\t\t},\n\t\tcomputed:\n\t\t{\n\t\t\t// ...mapGetters(['post'])\n\t\t\tpost()\n\t\t\t{\n\t\t\t\tlet post = this.$store.getters['posts/post'](this.id);\n\t\t\t\t// console.log(\"Post is:....\", post);\n\t\t\t\tif (post == null)\n\t\t\t\t\tthis.fetchPost(this.id);\n\n\n\t\t\t\treturn post;\n\t\t\t}\n\t\t}\n\t\t,\n\t\tmethods:\n\t\t{\n\t\t\tsearchCache(id)\n            {\n\t            return window.caches.open('img-resources')\n\t                  .then( cache =>\n\t                         {\n\t\t                         console.log(\"Searching keys for id\", id);\n\t\t                         // console.log(\"KEYS\", keys);\n\t                         \treturn cache.keys().then(urls =>\n                                                               {\n                                                               \tfor (let i = 0; i <urls.length; ++i)\n                                                                {\n                                                                \tif (urls[i].url ===\n                                                                    `https://jsonplaceholder.typicode.com/posts/${id}`)\n                                                                \t\treturn true;\n                                                                }\n                                                               \treturn false;\n                                                               });\n\t                         }\n\t                  ).catch(error => {console.error(\"Error cached\", error)})\n            },\n\t\t\t// ...mapActions(['posts/fetchPost'])\n\t\t\tfetchPost(id)\n\t\t\t{\n\t\t\t\tthis.send_message_to_sw(this.id);\n\t\t\t\tthis.$store.dispatch('posts/fetchPost', id)\n\t\t\t\t    .then((data) =>\n\t\t\t\t          {\n\t\t\t\t\t          console.log('Fetch ok', data);\n\t\t\t\t          })\n\t\t\t\t    .catch((error) =>\n\t\t\t\t           {\n\t\t\t\t\t           console.error('Fetch error', error);\n\t\t\t\t           });\n\t\t\t},\n\t\t\tsend_message_to_sw(id)\n\t\t\t{\n\t\t\t\tif ('serviceWorker' in navigator)\n\t\t\t\t{\n\t\t\t\t\tnavigator.serviceWorker.ready\n\t\t\t\t\t         .then(function (serviceWorkerRegistration)\n\t\t\t\t\t               {\n\t\t\t\t\t\t               // Let's see if you have a subscription already\n\t\t\t\t\t\t               return serviceWorkerRegistration.pushManager.getSubscription();\n\t\t\t\t\t               })\n\t\t\t\t\t         .then(function (subscription)\n\t\t\t\t\t               {\n\t\t\t\t\t\t               if (! subscription)\n\t\t\t\t\t\t               {\n\t\t\t\t\t\t\t               // You do not have subscription\n\t\t\t\t\t\t               }\n\t\t\t\t\t\t               // You have subscription.\n\t\t\t\t\t\t               // Send data to service worker\n\t\t\t\t\t\t               console.log(\"Sending to SW...\");\n\t\t\t\t\t\t               navigator.serviceWorker.controller.postMessage(\n\t\t\t\t\t\t               {\n\t\t\t\t\t\t\t               \"data\":\n\t\t\t\t\t\t\t               {\n\t\t\t\t\t\t\t\t               \"dev_comm\": true,\n\t\t\t\t\t\t\t\t               \"id\": id\n\t\t\t\t\t\t\t               }\n\t\t\t\t\t\t               });\n\n\t\t\t\t\t               })\n\t\t\t\t}\n\t\t\t},\n\t\t\tdeletePostFromCache()\n\t\t\t{\n\t\t\t\tthis.send_message_to_sw(this.id);\n\t\t\t},\n\t\t\ttoggleCache()\n\t\t\t{\n\t\t\t\t// event.preventDefault();\n                console.log(\"Firing for post: \", this.id);\n\t\t\t\tif (this.cached)\n\t\t\t\t{\n\t\t\t\t\tthis.deletePostFromCache()\n                    // this.cached = false;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tthis.fetchPost(this.id)\n\t\t\t\t\t// this.cached = true;\n\t\t\t\t}\n\t\t\t\tconsole.log(`Post ${this.id}: Cache = ${this.cached}`);\n\t\t\t\t// this.cached = !this.cached;\n\t\t\t}\n\n\t\t},\n\t\tcreated()\n\t\t{\n\t\t\tconst id = this.id;\n\t\t\treturn this.searchCache(id).then(result =>\n                                             {\n                                             \tconsole.log(\"Search from cache: \", result);\n                                             \tif (result != null)\n                                                 \tthis.cached = result;})\n\t\t\t// this.$store.dispatch('posts/fetchPost', this.id);\n\t\t}\n\t}\n",{"version":3,"sources":["Post.vue"],"names":[],"mappings":";;;;;;;;;;;AAWA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Post.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div v-if=\"post\" style=\"padding: 2rem 4rem;\">\n        <h3>{{ post.getTitle() }}</h3>\n        <span>UID: {{ post.getUid() }}</span><br> <span>Id: {{ post.getId() }}</span><br>\n        <span>{{ post.getBody() }}</span>\n        <v-switch v-model=\"cached\" @click.native=\"toggleCache();\"\n                  :label=\"`Post cached: ${cached.toString()}`\"></v-switch>\n    </div>\n</template>\n\n<script>\n\timport {mapGetters, mapActions} from 'vuex';\n\n\texport default {\n\t\tname: \"Post\",\n\t\tprops:\n\t\t{\n\t\t\tid: Number\n\t\t},\n\t\tdata: function ()\n\t\t{\n\t\t\treturn {\n\t\t\t\tcached: false\n\t\t\t}\n\t\t},\n\t\tcomputed:\n\t\t{\n\t\t\t// ...mapGetters(['post'])\n\t\t\tpost()\n\t\t\t{\n\t\t\t\tlet post = this.$store.getters['posts/post'](this.id);\n\t\t\t\t// console.log(\"Post is:....\", post);\n\t\t\t\tif (post == null)\n\t\t\t\t\tthis.fetchPost(this.id);\n\n\n\t\t\t\treturn post;\n\t\t\t}\n\t\t}\n\t\t,\n\t\tmethods:\n\t\t{\n\t\t\tsearchCache(id)\n            {\n\t            return window.caches.open('img-resources')\n\t                  .then( cache =>\n\t                         {\n\t\t                         console.log(\"Searching keys for id\", id);\n\t\t                         // console.log(\"KEYS\", keys);\n\t                         \treturn cache.keys().then(urls =>\n                                                               {\n                                                               \tfor (let i = 0; i <urls.length; ++i)\n                                                                {\n                                                                \tif (urls[i].url ===\n                                                                    `https://jsonplaceholder.typicode.com/posts/${id}`)\n                                                                \t\treturn true;\n                                                                }\n                                                               \treturn false;\n                                                               });\n\t                         }\n\t                  ).catch(error => {console.error(\"Error cached\", error)})\n            },\n\t\t\t// ...mapActions(['posts/fetchPost'])\n\t\t\tfetchPost(id)\n\t\t\t{\n\t\t\t\tthis.send_message_to_sw(this.id);\n\t\t\t\tthis.$store.dispatch('posts/fetchPost', id)\n\t\t\t\t    .then((data) =>\n\t\t\t\t          {\n\t\t\t\t\t          console.log('Fetch ok', data);\n\t\t\t\t          })\n\t\t\t\t    .catch((error) =>\n\t\t\t\t           {\n\t\t\t\t\t           console.error('Fetch error', error);\n\t\t\t\t           });\n\t\t\t},\n\t\t\tsend_message_to_sw(id)\n\t\t\t{\n\t\t\t\tif ('serviceWorker' in navigator)\n\t\t\t\t{\n\t\t\t\t\tnavigator.serviceWorker.ready\n\t\t\t\t\t         .then(function (serviceWorkerRegistration)\n\t\t\t\t\t               {\n\t\t\t\t\t\t               // Let's see if you have a subscription already\n\t\t\t\t\t\t               return serviceWorkerRegistration.pushManager.getSubscription();\n\t\t\t\t\t               })\n\t\t\t\t\t         .then(function (subscription)\n\t\t\t\t\t               {\n\t\t\t\t\t\t               if (! subscription)\n\t\t\t\t\t\t               {\n\t\t\t\t\t\t\t               // You do not have subscription\n\t\t\t\t\t\t               }\n\t\t\t\t\t\t               // You have subscription.\n\t\t\t\t\t\t               // Send data to service worker\n\t\t\t\t\t\t               console.log(\"Sending to SW...\");\n\t\t\t\t\t\t               navigator.serviceWorker.controller.postMessage(\n\t\t\t\t\t\t               {\n\t\t\t\t\t\t\t               \"data\":\n\t\t\t\t\t\t\t               {\n\t\t\t\t\t\t\t\t               \"dev_comm\": true,\n\t\t\t\t\t\t\t\t               \"id\": id\n\t\t\t\t\t\t\t               }\n\t\t\t\t\t\t               });\n\n\t\t\t\t\t               })\n\t\t\t\t}\n\t\t\t},\n\t\t\tdeletePostFromCache()\n\t\t\t{\n\t\t\t\tthis.send_message_to_sw(this.id);\n\t\t\t},\n\t\t\ttoggleCache()\n\t\t\t{\n\t\t\t\t// event.preventDefault();\n                console.log(\"Firing for post: \", this.id);\n\t\t\t\tif (this.cached)\n\t\t\t\t{\n\t\t\t\t\tthis.deletePostFromCache()\n                    // this.cached = false;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tthis.fetchPost(this.id)\n\t\t\t\t\t// this.cached = true;\n\t\t\t\t}\n\t\t\t\tconsole.log(`Post ${this.id}: Cache = ${this.cached}`);\n\t\t\t\t// this.cached = !this.cached;\n\t\t\t}\n\n\t\t},\n\t\tcreated()\n\t\t{\n\t\t\tconst id = this.id;\n\t\t\treturn this.searchCache(id).then(result =>\n                                             {\n                                             \tconsole.log(\"Search from cache: \", result);\n                                             \tif (result != null)\n                                                 \tthis.cached = result;})\n\t\t\t// this.$store.dispatch('posts/fetchPost', this.id);\n\t\t}\n\t}\n</script>\n\n<style scoped>\n\n</style>\n"]}]}