{"remainingRequest":"/Users/ale/Documents/Bachproef/pwa-3/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ale/Documents/Bachproef/pwa-3/src/components/Product.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/ale/Documents/Bachproef/pwa-3/src/components/Product.vue","mtime":1560358239679},{"path":"/Users/ale/Documents/Bachproef/pwa-3/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ale/Documents/Bachproef/pwa-3/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/ale/Documents/Bachproef/pwa-3/node_modules/vuetify-loader/lib/loader.js","mtime":1549812933000},{"path":"/Users/ale/Documents/Bachproef/pwa-3/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ale/Documents/Bachproef/pwa-3/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport\n{\n    MagentoAPIService\n}\nfrom \"../services/MagentoAPIService\";\nimport\n{\n    Product\n}\nfrom \"../objects/Product\";\n\nconst magentoApiService = new MagentoAPIService();\n\nexport default\n{\n    name: \"product\",\n    props:\n    {\n        sku: String\n    },\n    data: function ()\n    {\n        return {\n            cached: false,\n            product: null\n        }\n    },\n    computed:\n    {\n        // product()\n        // {\n        // \tlet product = this.$store.getters['products/product'](this.sku);\n        // \tif (product == null && this.sku != null)\n        // \t\tthis.fetchProduct(this.sku);\n        // \treturn product;\n        // }\n    },\n    methods:\n    {\n        _navigate()\n        {\n            const path = `/product/${this.sku}`;\n            this.$router.push(\n            {\n                path,\n                query:\n                {\n                    t: +new Date()\n                }\n            });\n        },\n        searchCache(sku)\n        {\n            return window.caches.open('products-cache')\n                .then(cache =>\n                {\n                    // console.log(\"Searching keys for id\", sku);\n                    // console.log(\"KEYS\", keys);\n                    return cache.keys()\n                        .then(urls =>\n                        {\n                            for (let i = 0; i < urls.length; ++i)\n                            {\n                                if (urls[i].url ===\n                                    `${MagentoAPIService.PRODUCTS_API}/${sku}`)\n                                    return true;\n                            }\n                            return false;\n                        });\n                })\n                .catch(error =>\n                {\n                    console.error(\"Error cached\", error)\n                })\n        },\n        fetchProduct(sku)\n        {\n            this.send_message_to_sw(this.sku);\n            this.$store.dispatch('products/fetchProduct', sku)\n                .then((data) =>\n                {\n                    console.log('Fetch ok', data);\n                })\n                .catch((error) =>\n                {\n                    console.error('Fetch error', error);\n                });\n        },\n        send_message_to_sw(sku)\n        {\n            if ('serviceWorker' in navigator)\n            {\n                navigator.serviceWorker.ready\n                    .then(function (serviceWorkerRegistration)\n                    {\n                        // Let's see if you have a subscription already\n                        return serviceWorkerRegistration.pushManager.getSubscription();\n                    })\n                    .then(function (subscription)\n                    {\n                        if (!subscription)\n                        {\n                            // You do not have subscription\n                        }\n                        // You have subscription.\n                        // Send data to service worker\n                        console.log(\"Sending to SW...\");\n                        navigator.serviceWorker.controller.postMessage(\n                        {\n                            \"data\":\n                            {\n                                \"dev_comm\": true,\n                                \"id\": sku\n                            }\n                        });\n\n                    })\n            }\n        },\n        deleteProductFromCache()\n        {\n            this.send_message_to_sw(this.id);\n        },\n        toggleCache()\n        {\n            // event.preventDefault();\n            console.log(\"Firing for product: \", this.sku);\n            if (this.cached)\n            {\n                this.deleteProductFromCache()\n                // this.cached = false;\n            }\n            else\n            {\n                this.fetchProduct(this.id)\n                // this.cached = true;\n            }\n            console.log(`Product ${this.id}: Cache = ${this.cached}`);\n            // this.cached = !this.cached;\n        }\n\n    },\n    async created()\n    {\n        /* return this.searchCache(this.sku)\n                   .then(result =>\n                         {\n        \t                 // console.log(\"Search from cache: \", result);\n        \t                 if (result != null)\n\n                 this.cached = result;\n                         }) */\n        // this.$store.dispatch('posts/fetchPost', this.id);\n        let magentoService = new MagentoAPIService();\n        let product = await magentoService.getProductBySKU(this.sku);\n        if (product)\n            this.product = product;\n    }\n}\n",{"version":3,"sources":["Product.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgfile":"Product.vue","sourceRoot":"src/components","sourcesContent":["<template>\n<v-flex xs12 sm6 lg4>\n    <a v-if=\"product\" v-on:click=\"_navigate()\" style=\"color: inherit\">\n        <img :src=\"product.getMainMedia()\" style=\"max-width:400px;width: 100%; max-height: 600px;\">\n        <div>\n            <h3>{{ product.getName() }}</h3>\n            <span style=\"display: inline-block;\">${{ product.getPrice()}}</span>\n            <div style=\"display: inline-block;float: right;position: relative;top: -1.5rem;\">\n                <v-btn fab\n                       dark\n                       small\n                       color=\"pink\">\n                    <v-icon dark>favorite</v-icon>\n                </v-btn>\n                <v-btn fab\n                       dark\n                       small\n                       color=\"teal\">\n                    <v-icon dark>add_shopping_cart</v-icon>\n                </v-btn>\n            </div>\n\n        </div>\n<!--        <span v-if=\"product.hasTierPrice()\">${{ product.getTierPrice()}}</span>-->\n<!--        <v-switch v-model=\"cached\"-->\n<!--                  @click.native=\"toggleCache();\"-->\n<!--                  :label=\"`Product cached: ${cached.toString()}`\"></v-switch>-->\n    </a>\n</v-flex>\n</template>\n\n<script>\nimport\n{\n    MagentoAPIService\n}\nfrom \"../services/MagentoAPIService\";\nimport\n{\n    Product\n}\nfrom \"../objects/Product\";\n\nconst magentoApiService = new MagentoAPIService();\n\nexport default\n{\n    name: \"product\",\n    props:\n    {\n        sku: String\n    },\n    data: function ()\n    {\n        return {\n            cached: false,\n            product: null\n        }\n    },\n    computed:\n    {\n        // product()\n        // {\n        // \tlet product = this.$store.getters['products/product'](this.sku);\n        // \tif (product == null && this.sku != null)\n        // \t\tthis.fetchProduct(this.sku);\n        // \treturn product;\n        // }\n    },\n    methods:\n    {\n        _navigate()\n        {\n            const path = `/product/${this.sku}`;\n            this.$router.push(\n            {\n                path,\n                query:\n                {\n                    t: +new Date()\n                }\n            });\n        },\n        searchCache(sku)\n        {\n            return window.caches.open('products-cache')\n                .then(cache =>\n                {\n                    // console.log(\"Searching keys for id\", sku);\n                    // console.log(\"KEYS\", keys);\n                    return cache.keys()\n                        .then(urls =>\n                        {\n                            for (let i = 0; i < urls.length; ++i)\n                            {\n                                if (urls[i].url ===\n                                    `${MagentoAPIService.PRODUCTS_API}/${sku}`)\n                                    return true;\n                            }\n                            return false;\n                        });\n                })\n                .catch(error =>\n                {\n                    console.error(\"Error cached\", error)\n                })\n        },\n        fetchProduct(sku)\n        {\n            this.send_message_to_sw(this.sku);\n            this.$store.dispatch('products/fetchProduct', sku)\n                .then((data) =>\n                {\n                    console.log('Fetch ok', data);\n                })\n                .catch((error) =>\n                {\n                    console.error('Fetch error', error);\n                });\n        },\n        send_message_to_sw(sku)\n        {\n            if ('serviceWorker' in navigator)\n            {\n                navigator.serviceWorker.ready\n                    .then(function (serviceWorkerRegistration)\n                    {\n                        // Let's see if you have a subscription already\n                        return serviceWorkerRegistration.pushManager.getSubscription();\n                    })\n                    .then(function (subscription)\n                    {\n                        if (!subscription)\n                        {\n                            // You do not have subscription\n                        }\n                        // You have subscription.\n                        // Send data to service worker\n                        console.log(\"Sending to SW...\");\n                        navigator.serviceWorker.controller.postMessage(\n                        {\n                            \"data\":\n                            {\n                                \"dev_comm\": true,\n                                \"id\": sku\n                            }\n                        });\n\n                    })\n            }\n        },\n        deleteProductFromCache()\n        {\n            this.send_message_to_sw(this.id);\n        },\n        toggleCache()\n        {\n            // event.preventDefault();\n            console.log(\"Firing for product: \", this.sku);\n            if (this.cached)\n            {\n                this.deleteProductFromCache()\n                // this.cached = false;\n            }\n            else\n            {\n                this.fetchProduct(this.id)\n                // this.cached = true;\n            }\n            console.log(`Product ${this.id}: Cache = ${this.cached}`);\n            // this.cached = !this.cached;\n        }\n\n    },\n    async created()\n    {\n        /* return this.searchCache(this.sku)\n                   .then(result =>\n                         {\n        \t                 // console.log(\"Search from cache: \", result);\n        \t                 if (result != null)\n\n                 this.cached = result;\n                         }) */\n        // this.$store.dispatch('posts/fetchPost', this.id);\n        let magentoService = new MagentoAPIService();\n        let product = await magentoService.getProductBySKU(this.sku);\n        if (product)\n            this.product = product;\n    }\n}\n</script>\n\n<style scoped>\n\n</style>\n"]}]}