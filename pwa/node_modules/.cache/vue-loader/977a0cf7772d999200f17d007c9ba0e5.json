{"remainingRequest":"/Users/ale/Documents/Bachproef/pwa-3/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ale/Documents/Bachproef/pwa-3/src/views/Products.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/ale/Documents/Bachproef/pwa-3/src/views/Products.vue","mtime":1556569884574},{"path":"/Users/ale/Documents/Bachproef/pwa-3/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ale/Documents/Bachproef/pwa-3/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/ale/Documents/Bachproef/pwa-3/node_modules/vuetify-loader/lib/loader.js","mtime":1549812933000},{"path":"/Users/ale/Documents/Bachproef/pwa-3/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ale/Documents/Bachproef/pwa-3/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\timport Product from \"../components/Product\";\n\timport Post from '../components/Post'\n\timport {MagentoAPIService} from \"../services/MagentoAPIService\";\n\n\texport default {\n\t\tname: \"Products\",\n\t\tcomponents: {\n\t\t\tProduct,\n\t\t\tPost\n\t\t},\n\t\tcomputed:\n\t\t{\n\t\t\tposts: function ()\n\t\t\t{\n\t\t\t\tlet posts = this.$store.getters['posts/allPosts'];\n\t\t\t\t// console.log(\"All Posts: \", posts);\n\t\t\t\treturn posts;\n\t\t\t},\n\t\t\tproducts: function ()\n\t\t\t{\n\t\t\t\tlet products = this.$store.getters['products/allProducts'];\n\t\t\t\t// console.log(\"All Posts: \", posts);\n\t\t\t\treturn products;\n\t\t\t}\n\t\t},\n\t\tcreated()\n\t\t{\n\t\t\t// const magentoAPI = new MagentoAPIService();\n\t\t\t// const products = magentoAPI.getProductList(15);\n\t\t\t//\n\t\t\t// let thisAlias = this;\n\t\t\t// let url_string = window.location.href;\n\t\t\t// var url = new URL(url_string);\n\t\t\t// var c = url.searchParams.get(\"post\");\n\t\t\t// if (c != null && !isNaN(c))\n\t\t\t// {\n\t\t\t// \tconsole.log(c);\n\t\t\t// \tthis.fetchPost(c);\n\t\t\t// }\n\t\t\t// this.fetchPost(1);\n\t\t\t// this.fetchPost(2);\n\t\t\t// this.fetchPost(3);\n\t\t\t//\n\t\t\t// url_string = window.location.href;\n\t\t\t// url = new URL(url_string);\n\t\t\t// c = url.searchParams.get(\"product\");\n\t\t\t// if (c != null && !isNaN(c))\n\t\t\t// {\n\t\t\t// \tconsole.log(c);\n\t\t\t// \tthis.fetchPost(c);\n\t\t\t// }\n\t\t\tthis.fetchProduct(\"24-MB01\");\n\t\t\tthis.fetchProduct(\"WS12\");\n\t\t},\n        methods:\n        {\n\t        fetchPost(id)\n\t        {\n\t\t        this.$store.dispatch('posts/fetchPost', id)\n\t\t            .then((data) =>\n\t\t                  {\n\t\t\t                  console.log('Fetch ok', data);\n\t\t                  })\n\t\t            .catch((error) =>\n\t\t                   {\n\t\t\t                   if (error.message === \"Offline\")\n\t\t\t                   {\n\t\t\t\t                   console.log(\"Network error: \", error)\n\t\t\t                   } else\n\t\t\t\t                   console.error('Fetch error', error);\n\t\t                   });\n\t        },\n\t        fetchProduct(sku)\n\t        {\n\t\t        this.$store.dispatch('products/fetchProduct', sku)\n\t\t            .then((data) =>\n\t\t                  {\n\t\t\t                  console.log('Fetch ok', data);\n\t\t                  })\n\t\t            .catch((error) =>\n\t\t                   {\n\t\t\t                   if (error.message === \"Offline\")\n\t\t\t                   {\n\t\t\t\t                   console.log(\"Network error: \", error)\n\t\t\t                   } else\n\t\t\t\t                   console.error('Fetch error', error);\n\t\t                   });\n\t        },\n        }\n\t}\n",{"version":3,"sources":["Products.vue"],"names":[],"mappings":";;;;;;;;;;;;;;AAcA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Products.vue","sourceRoot":"src/views","sourcesContent":["<template>\n    <div class=\"products-container\">\n        <!--                <h1>Posts</h1>-->\n        <!--                <Post v-for=\"(post, index) in posts\" :key=\"index\" v-bind:id=\"post.getId()\" />-->\n\n        <h1>Products</h1>\n        <Product v-for=\"(product, index) in products\"\n                 :key=\"product.getSku()\"\n                 v-bind:sku=\"product.getSku()\" style=\"display: inline-block;max-width: 30%;vertical-align: top;\"/>\n        <!--                <Product v-bind:id=\"24-MB01\" />-->\n    </div>\n</template>\n\n<script>\n\timport Product from \"../components/Product\";\n\timport Post from '../components/Post'\n\timport {MagentoAPIService} from \"../services/MagentoAPIService\";\n\n\texport default {\n\t\tname: \"Products\",\n\t\tcomponents: {\n\t\t\tProduct,\n\t\t\tPost\n\t\t},\n\t\tcomputed:\n\t\t{\n\t\t\tposts: function ()\n\t\t\t{\n\t\t\t\tlet posts = this.$store.getters['posts/allPosts'];\n\t\t\t\t// console.log(\"All Posts: \", posts);\n\t\t\t\treturn posts;\n\t\t\t},\n\t\t\tproducts: function ()\n\t\t\t{\n\t\t\t\tlet products = this.$store.getters['products/allProducts'];\n\t\t\t\t// console.log(\"All Posts: \", posts);\n\t\t\t\treturn products;\n\t\t\t}\n\t\t},\n\t\tcreated()\n\t\t{\n\t\t\t// const magentoAPI = new MagentoAPIService();\n\t\t\t// const products = magentoAPI.getProductList(15);\n\t\t\t//\n\t\t\t// let thisAlias = this;\n\t\t\t// let url_string = window.location.href;\n\t\t\t// var url = new URL(url_string);\n\t\t\t// var c = url.searchParams.get(\"post\");\n\t\t\t// if (c != null && !isNaN(c))\n\t\t\t// {\n\t\t\t// \tconsole.log(c);\n\t\t\t// \tthis.fetchPost(c);\n\t\t\t// }\n\t\t\t// this.fetchPost(1);\n\t\t\t// this.fetchPost(2);\n\t\t\t// this.fetchPost(3);\n\t\t\t//\n\t\t\t// url_string = window.location.href;\n\t\t\t// url = new URL(url_string);\n\t\t\t// c = url.searchParams.get(\"product\");\n\t\t\t// if (c != null && !isNaN(c))\n\t\t\t// {\n\t\t\t// \tconsole.log(c);\n\t\t\t// \tthis.fetchPost(c);\n\t\t\t// }\n\t\t\tthis.fetchProduct(\"24-MB01\");\n\t\t\tthis.fetchProduct(\"WS12\");\n\t\t},\n        methods:\n        {\n\t        fetchPost(id)\n\t        {\n\t\t        this.$store.dispatch('posts/fetchPost', id)\n\t\t            .then((data) =>\n\t\t                  {\n\t\t\t                  console.log('Fetch ok', data);\n\t\t                  })\n\t\t            .catch((error) =>\n\t\t                   {\n\t\t\t                   if (error.message === \"Offline\")\n\t\t\t                   {\n\t\t\t\t                   console.log(\"Network error: \", error)\n\t\t\t                   } else\n\t\t\t\t                   console.error('Fetch error', error);\n\t\t                   });\n\t        },\n\t        fetchProduct(sku)\n\t        {\n\t\t        this.$store.dispatch('products/fetchProduct', sku)\n\t\t            .then((data) =>\n\t\t                  {\n\t\t\t                  console.log('Fetch ok', data);\n\t\t                  })\n\t\t            .catch((error) =>\n\t\t                   {\n\t\t\t                   if (error.message === \"Offline\")\n\t\t\t                   {\n\t\t\t\t                   console.log(\"Network error: \", error)\n\t\t\t                   } else\n\t\t\t\t                   console.error('Fetch error', error);\n\t\t                   });\n\t        },\n        }\n\t}\n</script>\n\n<style scoped>\n\n</style>\n"]}]}