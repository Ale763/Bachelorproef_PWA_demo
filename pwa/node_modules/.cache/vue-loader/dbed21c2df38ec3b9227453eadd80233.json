{"remainingRequest":"/Users/ale/Documents/Bachproef/pwa-3/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ale/Documents/Bachproef/pwa-3/src/views/Products.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/ale/Documents/Bachproef/pwa-3/src/views/Products.vue","mtime":1556181424814},{"path":"/Users/ale/Documents/Bachproef/pwa-3/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ale/Documents/Bachproef/pwa-3/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/ale/Documents/Bachproef/pwa-3/node_modules/ts-loader/index.js","mtime":1545640398000},{"path":"/Users/ale/Documents/Bachproef/pwa-3/node_modules/vuetify-loader/lib/loader.js","mtime":1549812933000},{"path":"/Users/ale/Documents/Bachproef/pwa-3/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ale/Documents/Bachproef/pwa-3/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\timport { Component, Vue }  from \"vue-property-decorator\";\n\timport {Product}             from \"../components/Product\";\n\t// import Post from '../components/Post'\n\timport {MagentoAPIService} from \"@/services/MagentoAPIService\";\n\n\t@Component({\n        components:\n        {\n        \tProduct\n        }\n               })\n\texport default class Products extends Vue\n    {\n\t    // ============================================================================================\n        // Data\n\n    \t// ============================================================================================\n        // Computed\n    \tget posts()\n\t    {\n\t\t    let posts = this.$store.getters['posts/allPosts'];\n\t\t    // console.log(\"All Posts: \", posts);\n\t\t    return posts;\n\t    }\n\n\t    get products()\n\t    {\n\t\t    let products = this.$store.getters['products/allProducts'];\n\t\t    // console.log(\"All Posts: \", posts);\n\t\t    return products;\n\t    }\n\n\t    // ============================================================================================\n        // Lifecycle hooks\n\n\t    created()\n        {\n\t        const magentoAPI = new MagentoAPIService();\n\t        const products = magentoAPI.getProductList(15);\n\n\t        let thisAlias = this;\n\t        // let url_string = window.location.href;\n\t        // var url = new URL(url_string);\n\t        // let c = url.searchParams.get(\"post\");\n\t        // if (c != null && !isNaN(c))\n\t        // {\n\t\t    //     console.log(c);\n\t\t    //     this.fetchPost(c);\n\t        // }\n\t        // this.fetchPost(1);\n\t        // this.fetchPost(2);\n\t        // this.fetchPost(3);\n            //\n\t        // url_string = window.location.href;\n\t        // url = new URL(url_string);\n\t        // c = url.searchParams.get(\"product\");\n\t        // if (c != null && !isNaN(c))\n\t        // {\n\t\t    //     console.log(c);\n\t\t    //     this.fetchPost(c);\n\t        // }\n\t        this.fetchProduct(\"24-MB01\");\n\t        this.fetchProduct(\"WS12\");\n        }\n\n\t    // ============================================================================================\n        // Helper functions\n\t    fetchPost(id: any)\n\t    {\n\t\t    this.$store.dispatch('posts/fetchPost', id)\n\t\t        .then((data) =>\n\t\t              {\n\t\t\t              console.log('Fetch ok', data);\n\t\t              })\n\t\t        .catch((error) =>\n\t\t               {\n\t\t\t               if (error.message === \"Offline\")\n\t\t\t               {\n\t\t\t\t               console.log(\"Network error: \", error)\n\t\t\t               } else\n\t\t\t\t               console.error('Fetch error', error);\n\t\t               });\n\t    }\n\t    fetchProduct(sku: any)\n\t    {\n\t\t    this.$store.dispatch('products/fetchProduct', sku)\n\t\t        .then((data) =>\n\t\t              {\n\t\t\t              console.log('Fetch ok', data);\n\t\t              })\n\t\t        .catch((error) =>\n\t\t               {\n\t\t\t               if (error.message === \"Offline\")\n\t\t\t               {\n\t\t\t\t               console.log(\"Network error: \", error)\n\t\t\t               } else\n\t\t\t\t               console.error('Fetch error', error);\n\t\t               });\n\t    }\n\t}\n",{"version":3,"sources":["Products.vue"],"names":[],"mappings":";;;;;;;;;;;;;;AAcA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Products.vue","sourceRoot":"src/views","sourcesContent":["<template>\n    <div class=\"products-container\">\n        <!--                <h1>Posts</h1>-->\n        <!--                <Post v-for=\"(post, index) in posts\" :key=\"index\" v-bind:id=\"post.getId()\" />-->\n\n        <h1>Products</h1>\n        <Product v-for=\"(product, index) in products\"\n                 :key=\"product.getSku()\"\n                 v-bind:sku=\"product.getSku()\" />\n        <!--                <Product v-bind:id=\"24-MB01\" />-->\n    </div>\n</template>\n\n<script lang=\"ts\">\n\timport { Component, Vue }  from \"vue-property-decorator\";\n\timport {Product}             from \"../components/Product\";\n\t// import Post from '../components/Post'\n\timport {MagentoAPIService} from \"@/services/MagentoAPIService\";\n\n\t@Component({\n        components:\n        {\n        \tProduct\n        }\n               })\n\texport default class Products extends Vue\n    {\n\t    // ============================================================================================\n        // Data\n\n    \t// ============================================================================================\n        // Computed\n    \tget posts()\n\t    {\n\t\t    let posts = this.$store.getters['posts/allPosts'];\n\t\t    // console.log(\"All Posts: \", posts);\n\t\t    return posts;\n\t    }\n\n\t    get products()\n\t    {\n\t\t    let products = this.$store.getters['products/allProducts'];\n\t\t    // console.log(\"All Posts: \", posts);\n\t\t    return products;\n\t    }\n\n\t    // ============================================================================================\n        // Lifecycle hooks\n\n\t    created()\n        {\n\t        const magentoAPI = new MagentoAPIService();\n\t        const products = magentoAPI.getProductList(15);\n\n\t        let thisAlias = this;\n\t        // let url_string = window.location.href;\n\t        // var url = new URL(url_string);\n\t        // let c = url.searchParams.get(\"post\");\n\t        // if (c != null && !isNaN(c))\n\t        // {\n\t\t    //     console.log(c);\n\t\t    //     this.fetchPost(c);\n\t        // }\n\t        // this.fetchPost(1);\n\t        // this.fetchPost(2);\n\t        // this.fetchPost(3);\n            //\n\t        // url_string = window.location.href;\n\t        // url = new URL(url_string);\n\t        // c = url.searchParams.get(\"product\");\n\t        // if (c != null && !isNaN(c))\n\t        // {\n\t\t    //     console.log(c);\n\t\t    //     this.fetchPost(c);\n\t        // }\n\t        this.fetchProduct(\"24-MB01\");\n\t        this.fetchProduct(\"WS12\");\n        }\n\n\t    // ============================================================================================\n        // Helper functions\n\t    fetchPost(id: any)\n\t    {\n\t\t    this.$store.dispatch('posts/fetchPost', id)\n\t\t        .then((data) =>\n\t\t              {\n\t\t\t              console.log('Fetch ok', data);\n\t\t              })\n\t\t        .catch((error) =>\n\t\t               {\n\t\t\t               if (error.message === \"Offline\")\n\t\t\t               {\n\t\t\t\t               console.log(\"Network error: \", error)\n\t\t\t               } else\n\t\t\t\t               console.error('Fetch error', error);\n\t\t               });\n\t    }\n\t    fetchProduct(sku: any)\n\t    {\n\t\t    this.$store.dispatch('products/fetchProduct', sku)\n\t\t        .then((data) =>\n\t\t              {\n\t\t\t              console.log('Fetch ok', data);\n\t\t              })\n\t\t        .catch((error) =>\n\t\t               {\n\t\t\t               if (error.message === \"Offline\")\n\t\t\t               {\n\t\t\t\t               console.log(\"Network error: \", error)\n\t\t\t               } else\n\t\t\t\t               console.error('Fetch error', error);\n\t\t               });\n\t    }\n\t}\n</script>\n\n<style scoped>\n\n</style>\n"]}]}